import { PrismaClient } from '../generated/prisma';
import { config } from 'dotenv';

config({
    path: '../../.env'
})

const prisma = new PrismaClient();

async function clearPermissionCache() {
    console.log('üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π...');

    try {
        // –û—á–∏—â–∞–µ–º –≤–µ—Å—å –∫—ç—à —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        const result = await prisma.userPermissionCache.deleteMany({});

        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${result.count} –∑–∞–ø–∏—Å–µ–π –∏–∑ –∫—ç—à–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π`);

        // –¢–∞–∫–∂–µ –º–æ–∂–µ–º –æ—á–∏—Å—Ç–∏—Ç—å –∞—É–¥–∏—Ç –ª–æ–≥–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        const auditResult = await prisma.permissionAudit.deleteMany({
            where: {
                createdAt: {
                    lt: new Date(Date.now() - 24 * 60 * 60 * 1000) // —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤
                }
            }
        });

        console.log(`‚úÖ –£–¥–∞–ª–µ–Ω–æ ${auditResult.count} —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ –∞—É–¥–∏—Ç–∞`);

        console.log('üéâ –ö—ç—à —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω!');
        console.log('üìù –¢–µ–ø–µ—Ä—å –≤—Å–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞:', error);
    } finally {
        await prisma.$disconnect();
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É
clearPermissionCache();
