import { PrismaClient } from 'generated/prisma';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞—Ç –≤ –∞–≤–≥—É—Å—Ç–µ 2025

function getDateInAugust2025(day: number): Date {
    // –í—Å–µ –¥–∞—Ç—ã –≤ –∞–≤–≥—É—Å—Ç–µ 2025
    return new Date(2025, 7, day); // –º–µ—Å—è—Ü 7 = –∞–≤–≥—É—Å—Ç (0-–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è)
}

async function main() {
    console.log('üå± –î–µ—Ä–µ–∫—Ç–µ—Ä “õ–æ—Ä—ã–Ω —Ç–æ–ª—Ç—ã—Ä—É–¥—ã –±–∞—Å—Ç–∞–π–º—ã–∑...');

    // // –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
    // console.log('üßπ –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ...');
    // await prisma.lessonResult.deleteMany();
    // await prisma.lesson.deleteMany();
    // await prisma.studyPlan.deleteMany();
    // await prisma.student.deleteMany();
    // await prisma.teacher.deleteMany();
    // await prisma.parent.deleteMany();
    // await prisma.group.deleteMany();
    // await prisma.classroom.deleteMany();
    // await prisma.user.deleteMany();

    console.log('üìù –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä–¥—ã “õ“±—Ä–∞–º—ã–∑...');

    // –•–µ—à–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    const hashedPassword = await bcrypt.hash('password123', 10);

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const admin = await prisma.user.create({
        data: {
            email: 'admin@abai.edu.kz',
            name: '”ò–∫—ñ–º—à—ñ',
            surname: '–ë–∞—Å“õ–∞—Ä—É—à—ã',
            middlename: '–ñ“Ø–π–µ–±–µ–∫“±–ª—ã',
            phone: '+7 700 000 0001',
            role: 'ADMIN',
            hashedPassword,
        },
    });

    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–∏—Å—Ç–∞
    const financist = await prisma.user.create({
        data: {
            email: 'financist@abai.edu.kz',
            name: '–ì“Ø–ª–º–∏—Ä–∞',
            surname: '“ö–∞—Å—ã–º–æ–≤–∞',
            middlename: '–°–µ—Ä—ñ–∫–∂–∞–Ω“õ—ã–∑—ã',
            phone: '+7 700 000 0006',
            role: 'FINANCIST',
            hashedPassword,
        },
    });

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    const teachers = await Promise.all([
        prisma.user.create({
            data: {
                email: 'ivanova@abai.edu.kz',
                name: '–ê–π–≥–µ—Ä—ñ–º',
                surname: '–ê–π—Ç–∞–Ω–æ–≤–∞',
                middlename: '–ü–µ—Ç—Ä–æ–≤–Ω–∞',
                phone: '+7 700 000 0002',
                role: 'TEACHER',
                hashedPassword,
                teacher: {
                    create: {
                        employmentType: 'STAFF',
                    },
                },
            },
            include: { teacher: true },
        }),
        prisma.user.create({
            data: {
                email: 'aliev@abai.edu.kz',
                name: '–ê–∑–∞–º–∞—Ç',
                surname: '”ò–ª–∏–µ–≤',
                middlename: '–°–µ—Ä—ñ–∫“±–ª—ã',
                phone: '+7 700 000 0003',
                role: 'TEACHER',
                hashedPassword,
                teacher: {
                    create: {
                        employmentType: 'STAFF',
                    },
                },
            },
            include: { teacher: true },
        }),
        prisma.user.create({
            data: {
                email: 'tulegenov@abai.edu.kz',
                name: '–ú“±—Ä–∞—Ç',
                surname: '–¢”©–ª–µ–∫–µ–Ω–æ–≤',
                middlename: '–ê—Å—ã–ª—Ö–∞–Ω“±–ª—ã',
                phone: '+7 700 000 0004',
                role: 'TEACHER',
                hashedPassword,
                teacher: {
                    create: {
                        employmentType: 'STAFF',
                    },
                },
            },
            include: { teacher: true },
        }),
        prisma.user.create({
            data: {
                email: 'nazarbayeva@abai.edu.kz',
                name: '–ê–π–≥“Ø–ª',
                surname: '–ù–∞–∑–∞—Ä–±–∞–µ–≤–∞',
                middlename: '–ï—Ä–º–µ–∫“õ—ã–∑—ã',
                phone: '+7 700 000 0005',
                role: 'TEACHER',
                hashedPassword,
                teacher: {
                    create: {
                        employmentType: 'PART_TIME',
                    },
                },
            },
            include: { teacher: true },
        }),
    ]);

    console.log('üë• –¢–æ–ø—Ç–∞—Ä–¥—ã “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—ã
    const groups = await Promise.all([
        prisma.group.create({
            data: {
                name: '10–ê',
                courseNumber: 10,
            },
        }),
        prisma.group.create({
            data: {
                name: '10–ë',
                courseNumber: 10,
            },
        }),
        prisma.group.create({
            data: {
                name: '11–ê',
                courseNumber: 11,
            },
        }),
        prisma.group.create({
            data: {
                name: '11–ë',
                courseNumber: 11,
            },
        }),
        prisma.group.create({
            data: {
                name: '9–ê',
                courseNumber: 9,
            },
        }),
    ]);

    console.log('üéì –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    const studentUsers = await Promise.all([
        // –°—Ç—É–¥–µ–Ω—Ç—ã 10–ê
        prisma.user.create({
            data: {
                email: 'aida.student@abai.edu.kz',
                name: '–ê–π–¥–∞',
                surname: '–ö–∞–∑—ã–±–µ–∫–æ–≤–∞',
                middlename: '–ù—É—Ä–ª–∞–Ω–æ–≤–Ω–∞',
                phone: '+7 700 000 0010',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[0].id, // 10–ê
                    },
                },
            },
            include: { student: true },
        }),
        prisma.user.create({
            data: {
                email: 'arman.student@abai.edu.kz',
                name: '–ê—Ä–º–∞–Ω',
                surname: '–ñ–∞–∫–∏–ø–æ–≤',
                middlename: '–ë–∞—É—ã—Ä–∂–∞–Ω–æ–≤–∏—á',
                phone: '+7 700 000 0011',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[0].id, // 10–ê
                    },
                },
            },
            include: { student: true },
        }),
        prisma.user.create({
            data: {
                email: 'temirlan.student@abai.edu.kz',
                name: '–¢–µ–º–∏—Ä–ª–∞–Ω',
                surname: '–ë–∞–π–±–µ–∫–æ–≤',
                middlename: '–ê—Å—ã–ª–æ–≤–∏—á',
                phone: '+7 700 000 0030',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[0].id, // 10–ê
                    },
                },
            },
            include: { student: true },
        }),
        prisma.user.create({
            data: {
                email: 'aida2.student@abai.edu.kz',
                name: '–ê–π–¥–∞–Ω–∞',
                surname: '–ù—É—Ä–ª–∞–Ω–æ–≤–∞',
                middlename: '–ï—Ä–ª–∞–Ω“õ—ã–∑—ã',
                phone: '+7 700 000 0031',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[0].id, // 10–ê
                    },
                },
            },
            include: { student: true },
        }),
        // –°—Ç—É–¥–µ–Ω—Ç—ã 10–ë
        prisma.user.create({
            data: {
                email: 'dana.student@abai.edu.kz',
                name: '–î–∞–Ω–∞',
                surname: '–°–µ—Ä–∞–ª–∏–µ–≤–∞',
                middlename: '–ê—Å—ã–ª–±–µ–∫–æ–≤–Ω–∞',
                phone: '+7 700 000 0012',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[1].id, // 10–ë
                    },
                },
            },
            include: { student: true },
        }),
        prisma.user.create({
            data: {
                email: 'amina.student@abai.edu.kz',
                name: '–ê–º–∏–Ω–∞',
                surname: '–ñ–∞“õ—Å—ã–ª—ã–∫–æ–≤–∞',
                middlename: '–ë–∞—Ö—ã—Ç–∂–∞–Ω“õ—ã–∑—ã',
                phone: '+7 700 000 0032',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[1].id, // 10–ë
                    },
                },
            },
            include: { student: true },
        }),
        prisma.user.create({
            data: {
                email: 'askar.student@abai.edu.kz',
                name: '–ê—Å“õ–∞—Ä',
                surname: '–ú“±—Ä–∞—Ç–æ–≤',
                middlename: '–°–µ—Ä—ñ–∫“±–ª—ã',
                phone: '+7 700 000 0033',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[1].id, // 10–ë
                    },
                },
            },
            include: { student: true },
        }),
        // –°—Ç—É–¥–µ–Ω—Ç—ã 11–ê
        prisma.user.create({
            data: {
                email: 'bekzat.student@abai.edu.kz',
                name: '–ë–µ–∫–∑–∞—Ç',
                surname: '–û—Ä–∞–∑–±–∞–µ–≤',
                middlename: '–ê–ª–º–∞—Å–æ–≤–∏—á',
                phone: '+7 700 000 0013',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[2].id, // 11–ê
                    },
                },
            },
            include: { student: true },
        }),
        prisma.user.create({
            data: {
                email: 'zarina.student@abai.edu.kz',
                name: '–ó–∞—Ä–∏–Ω–∞',
                surname: '“ö–∞—Å—ã–º–æ–≤–∞',
                middlename: '–ï—Ä–±–æ–ª“õ—ã–∑—ã',
                phone: '+7 700 000 0034',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[2].id, // 11–ê
                    },
                },
            },
            include: { student: true },
        }),
        // –°—Ç—É–¥–µ–Ω—Ç—ã 11–ë
        prisma.user.create({
            data: {
                email: 'dias.student@abai.edu.kz',
                name: '–î–∏–∞—Å',
                surname: '”ò–±–¥—ñ–ª–¥–∞–µ–≤',
                middlename: '–ù“±—Ä–ª–∞–Ω“±–ª—ã',
                phone: '+7 700 000 0035',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[3].id, // 11–ë
                    },
                },
            },
            include: { student: true },
        }),
        // –°—Ç—É–¥–µ–Ω—Ç—ã 9–ê
        prisma.user.create({
            data: {
                email: 'aruzhan.student@abai.edu.kz',
                name: '–ê—Ä—É–∂–∞–Ω',
                surname: '–¢—ñ–ª–µ—É–±–µ–∫–æ–≤–∞',
                middlename: '–ú–∞“õ—Å–∞—Ç“õ—ã–∑—ã',
                phone: '+7 700 000 0036',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[4].id, // 9–ê
                    },
                },
            },
            include: { student: true },
        }),
        prisma.user.create({
            data: {
                email: 'alibek.student@abai.edu.kz',
                name: '”ò–ª—ñ–±–µ–∫',
                surname: '–î–æ—Å—ã–º–æ–≤',
                middlename: '–ë–æ–ª–∞—Ç“±–ª—ã',
                phone: '+7 700 000 0037',
                role: 'STUDENT',
                hashedPassword,
                student: {
                    create: {
                        groupId: groups[4].id, // 9–ê
                    },
                },
            },
            include: { student: true },
        }),
    ]);

    console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ê—Ç–∞-–∞–Ω–∞–ª–∞—Ä–¥—ã “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª–µ–π –¥–ª—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    const parents = await Promise.all([
        // –†–æ–¥–∏—Ç–µ–ª–∏ –¥–ª—è –ê–π–¥—ã –ö–∞–∑—ã–±–µ–∫–æ–≤–æ–π (—Å—Ç—É–¥–µ–Ω—Ç 0)
        prisma.user.create({
            data: {
                email: 'nazym.parent@abai.edu.kz',
                name: '–ù–∞–∑—ã–º',
                surname: '–ö–∞–∑—ã–±–µ–∫–æ–≤–∞',
                middlename: '–°–µ—Ä–∏–∫–∂–∞–Ω–æ–≤–Ω–∞',
                phone: '+7 700 000 0020',
                role: 'PARENT',
                hashedPassword,
                parent: {
                    create: {
                        relation: '–ú–∞—Ç—å',
                        students: {
                            connect: { id: studentUsers[0].student.id }, // –ê–π–¥–∞
                        },
                    },
                },
            },
            include: { parent: true },
        }),
        prisma.user.create({
            data: {
                email: 'nurlan.parent@abai.edu.kz',
                name: '–ù—É—Ä–ª–∞–Ω',
                surname: '–ö–∞–∑—ã–±–µ–∫–æ–≤',
                middlename: '–ê–±–∞–π–µ–≤–∏—á',
                phone: '+7 700 000 0025',
                role: 'PARENT',
                hashedPassword,
                parent: {
                    create: {
                        relation: '–û—Ç–µ—Ü',
                        students: {
                            connect: { id: studentUsers[0].student.id }, // –ê–π–¥–∞
                        },
                    },
                },
            },
            include: { parent: true },
        }),
        // –†–æ–¥–∏—Ç–µ–ª–∏ –¥–ª—è –ê—Ä–º–∞–Ω–∞ –ñ–∞–∫–∏–ø–æ–≤–∞ (—Å—Ç—É–¥–µ–Ω—Ç 1)
        prisma.user.create({
            data: {
                email: 'bolat.parent@abai.edu.kz',
                name: '–ë–æ–ª–∞—Ç',
                surname: '–ñ–∞–∫–∏–ø–æ–≤',
                middlename: '–ú–∞—Ä–∞—Ç–æ–≤–∏—á',
                phone: '+7 700 000 0021',
                role: 'PARENT',
                hashedPassword,
                parent: {
                    create: {
                        relation: '–û—Ç–µ—Ü',
                        students: {
                            connect: { id: studentUsers[1].student.id }, // –ê—Ä–º–∞–Ω
                        },
                    },
                },
            },
            include: { parent: true },
        }),
        prisma.user.create({
            data: {
                email: 'gulnara.parent@abai.edu.kz',
                name: '–ì—É–ª—å–Ω–∞—Ä–∞',
                surname: '–ñ–∞–∫–∏–ø–æ–≤–∞',
                middlename: '–ï—Ä–ª–∞–Ω–æ–≤–Ω–∞',
                phone: '+7 700 000 0026',
                role: 'PARENT',
                hashedPassword,
                parent: {
                    create: {
                        relation: '–ú–∞—Ç—å',
                        students: {
                            connect: { id: studentUsers[1].student.id }, // –ê—Ä–º–∞–Ω
                        },
                    },
                },
            },
            include: { parent: true },
        }),
        // –†–æ–¥–∏—Ç–µ–ª–∏ –¥–ª—è –î–∞–Ω—ã –°–µ—Ä–∞–ª–∏–µ–≤–æ–π (—Å—Ç—É–¥–µ–Ω—Ç 2)
        prisma.user.create({
            data: {
                email: 'asylbek.parent@abai.edu.kz',
                name: '–ê—Å—ã–ª–±–µ–∫',
                surname: '–°–µ—Ä–∞–ª–∏–µ–≤',
                middlename: '–ö–∞—Å—ã–º–æ–≤–∏—á',
                phone: '+7 700 000 0027',
                role: 'PARENT',
                hashedPassword,
                parent: {
                    create: {
                        relation: '–û—Ç–µ—Ü',
                        students: {
                            connect: { id: studentUsers[2].student.id }, // –î–∞–Ω–∞
                        },
                    },
                },
            },
            include: { parent: true },
        }),
        prisma.user.create({
            data: {
                email: 'zhanar.parent@abai.edu.kz',
                name: '–ñ–∞–Ω–∞—Ä',
                surname: '–°–µ—Ä–∞–ª–∏–µ–≤–∞',
                middlename: '–ê–º–∞–Ω–≥–µ–ª—å–¥–∏–Ω–æ–≤–Ω–∞',
                phone: '+7 700 000 0028',
                role: 'PARENT',
                hashedPassword,
                parent: {
                    create: {
                        relation: '–ú–∞—Ç—å',
                        students: {
                            connect: { id: studentUsers[2].student.id }, // –î–∞–Ω–∞
                        },
                    },
                },
            },
            include: { parent: true },
        }),
        // –†–æ–¥–∏—Ç–µ–ª—å –¥–ª—è –ë–µ–∫–∑–∞—Ç–∞ –û—Ä–∞–∑–±–∞–µ–≤–∞ (—Å—Ç—É–¥–µ–Ω—Ç 3) - –æ–¥–∏–Ω–æ–∫–∏–π —Ä–æ–¥–∏—Ç–µ–ª—å
        prisma.user.create({
            data: {
                email: 'almas.parent@abai.edu.kz',
                name: '–ê–ª–º–∞—Å',
                surname: '–û—Ä–∞–∑–±–∞–µ–≤',
                middlename: '–ò–ª—å—è—Å–æ–≤–∏—á',
                phone: '+7 700 000 0029',
                role: 'PARENT',
                hashedPassword,
                parent: {
                    create: {
                        relation: '–û—Ç–µ—Ü',
                        students: {
                            connect: { id: studentUsers[3].student.id }, // –ë–µ–∫–∑–∞—Ç
                        },
                    },
                },
            },
            include: { parent: true },
        }),
    ]);

    console.log('üè´ –°—ã–Ω—ã–ø—Ç–∞—Ä–¥—ã (–∞—É–¥–∏—Ç–æ—Ä–∏—è–ª–∞—Ä–¥—ã) “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –∞—É–¥–∏—Ç–æ—Ä–∏–∏
    const classrooms = await Promise.all([
        prisma.classroom.create({
            data: {
                name: '101',
                building: '–ù–µ–≥—ñ–∑–≥—ñ –∫–æ—Ä–ø—É—Å',
                floor: 1,
                capacity: 30,
                type: 'LECTURE',
                equipment: ['–ü—Ä–æ–µ–∫—Ç–æ—Ä', '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤—Ç—ñ —Ç–∞“õ—Ç–∞', '–ö–æ–º–ø—å—é—Ç–µ—Ä'],
                description: '–ó–∞–º–∞–Ω–∞—É–∏ –∂–∞–±–¥—ã“õ—Ç–∞–ª“ì–∞–Ω –¥”ô—Ä—ñ—Å –∞—É–¥–∏—Ç–æ—Ä–∏—è—Å—ã',
            },
        }),
        prisma.classroom.create({
            data: {
                name: '205',
                building: '–ù–µ–≥—ñ–∑–≥—ñ –∫–æ—Ä–ø—É—Å',
                floor: 2,
                capacity: 25,
                type: 'PRACTICE',
                equipment: ['–ü—Ä–æ–µ–∫—Ç–æ—Ä', '–ú–∞—Ä–∫–µ—Ä–ª—ñ–∫ —Ç–∞“õ—Ç–∞'],
                description: '–¢”ô–∂—ñ—Ä–∏–±–µ–ª—ñ–∫ —Å–∞–±–∞“õ—Ç–∞—Ä“ì–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω –∞—É–¥–∏—Ç–æ—Ä–∏—è',
            },
        }),
        prisma.classroom.create({
            data: {
                name: '305',
                building: '–ñ–∞—Ä–∞—Ç—ã–ª—ã—Å—Ç–∞–Ω—É –∫–æ—Ä–ø—É—Å—ã',
                floor: 3,
                capacity: 20,
                type: 'LABORATORY',
                equipment: ['–ó–µ—Ä—Ç—Ö–∞–Ω–∞–ª—ã“õ –∂–∞–±–¥—ã“õ', '–°–æ—Ä—É —à–∫–∞—Ñ—ã', '–ú–∏–∫—Ä–æ—Å–∫–æ–ø—Ç–∞—Ä'],
                description: '–§–∏–∑–∏–∫–∞ –∂”ô–Ω–µ —Ö–∏–º–∏—è –∑–µ—Ä—Ç—Ö–∞–Ω–∞—Å—ã',
            },
        }),
    ]);

    console.log('üìö –û“õ—É –∂–æ—Å–ø–∞—Ä–ª–∞—Ä—ã–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —É—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã
    const studyPlans = await Promise.all([
        prisma.studyPlan.create({
            data: {
                name: '–ê–ª–≥–µ–±—Ä–∞ - 10 —Å—ã–Ω—ã–ø',
                description: '10 —Å—ã–Ω—ã–ø“õ–∞ –∞—Ä–Ω–∞–ª“ì–∞–Ω –∞–ª–≥–µ–±—Ä–∞–Ω—ã —Ç–µ—Ä–µ“£–¥–µ—Ç—ñ–ø –æ“õ—ã—Ç—É (—Ç–∞–ª–¥–∞—É —ç–ª–µ–º–µ–Ω—Ç—Ç–µ—Ä—ñ–º–µ–Ω)',
                teacherId: teachers[0].teacher.id, // –ò–≤–∞–Ω–æ–≤–∞
                normativeWorkload: 102, // —á–∞—Å–æ–≤ –≤ –≥–æ–¥
                group: {
                    connect: [{ id: groups[0].id }, { id: groups[1].id }], // 10–ê –∏ 10–ë
                },
            },
        }),
        prisma.studyPlan.create({
            data: {
                name: '–ë–∏–æ–ª–æ–≥–∏—è - 10 —Å—ã–Ω—ã–ø',
                description: '–ñ–∞–ª–ø—ã –±–∏–æ–ª–æ–≥–∏—è –∂”ô–Ω–µ —ç–∫–æ–ª–æ–≥–∏—è –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ',
                teacherId: teachers[1].teacher.id, // –ê–ª–∏–µ–≤
                normativeWorkload: 68,
                group: {
                    connect: [{ id: groups[1].id }], // 10–ë
                },
            },
        }),
        prisma.studyPlan.create({
            data: {
                name: '–§–∏–∑–∏–∫–∞ - 11 —Å—ã–Ω—ã–ø',
                description: '–ú–æ–ª–µ–∫—É–ª–∞–ª—ã“õ —Ñ–∏–∑–∏–∫–∞ –∂”ô–Ω–µ —Ç–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞',
                teacherId: teachers[2].teacher.id, // –¢—É–ª–µ–≥–µ–Ω–æ–≤
                normativeWorkload: 85,
                group: {
                    connect: [{ id: groups[2].id }, { id: groups[3].id }], // 11–ê –∏ 11–ë
                },
            },
        }),
        prisma.studyPlan.create({
            data: {
                name: '–•–∏–º–∏—è - 9 —Å—ã–Ω—ã–ø',
                description: '–ë–µ–π–æ—Ä–≥–∞–Ω–∏–∫–∞–ª—ã“õ —Ö–∏–º–∏—è –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ',
                teacherId: teachers[3].teacher.id, // –ù–∞–∑–∞—Ä–±–∞–µ–≤–∞
                normativeWorkload: 68,
                group: {
                    connect: [{ id: groups[4].id }], // 9–ê
                },
            },
        }),
    ]);

    console.log('üìÖ –°–∞–±–∞“õ –∫–µ—Å—Ç–µ—Å—ñ–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    await Promise.all([
        // –ê–ª–≥–µ–±—Ä–∞ 10–ê - –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 8:30-9:15
        prisma.schedule.create({
            data: {
                studyPlanId: studyPlans[0].id,
                groupId: groups[0].id,
                teacherId: teachers[0].teacher.id,
                classroomId: classrooms[0].id,
                dayOfWeek: 1, // –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
                startTime: '08:30',
                endTime: '09:15',
            },
        }),
        // –ê–ª–≥–µ–±—Ä–∞ 10–ë - –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 9:25-10:10
        prisma.schedule.create({
            data: {
                studyPlanId: studyPlans[0].id,
                groupId: groups[1].id,
                teacherId: teachers[0].teacher.id,
                classroomId: classrooms[0].id,
                dayOfWeek: 1,
                startTime: '09:25',
                endTime: '10:10',
            },
        }),
        // –ë–∏–æ–ª–æ–≥–∏—è 10–ë - –í—Ç–æ—Ä–Ω–∏–∫ 10:25-11:10
        prisma.schedule.create({
            data: {
                studyPlanId: studyPlans[1].id,
                groupId: groups[1].id,
                teacherId: teachers[1].teacher.id,
                classroomId: classrooms[2].id,
                dayOfWeek: 2, // –í—Ç–æ—Ä–Ω–∏–∫
                startTime: '10:25',
                endTime: '11:10',
            },
        }),
        // –§–∏–∑–∏–∫–∞ 11–ê - –°—Ä–µ–¥–∞ 11:25-12:10
        prisma.schedule.create({
            data: {
                studyPlanId: studyPlans[2].id,
                groupId: groups[2].id,
                teacherId: teachers[2].teacher.id,
                classroomId: classrooms[2].id,
                dayOfWeek: 3, // –°—Ä–µ–¥–∞
                startTime: '11:25',
                endTime: '12:10',
            },
        }),
    ]);

    console.log('üìñ –°–∞–±–∞“õ—Ç–∞—Ä–¥—ã “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä —É—Ä–æ–∫–æ–≤ –¥–ª—è –∞–≤–≥—É—Å—Ç–∞ 2025
    const lessons = await Promise.all([
        // –£—Ä–æ–∫–∏ –∞–ª–≥–µ–±—Ä—ã (10 –∫–ª–∞—Å—Å) - –∞–≤–≥—É—Å—Ç 2025
        prisma.lesson.create({
            data: {
                name: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä',
                description: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä–¥—ñ ”ô—Ä—Ç“Ø—Ä–ª—ñ —Ç”ô—Å—ñ–ª–¥–µ—Ä–º–µ–Ω —à–µ—à—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(5),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '“ö—ã—Å“õ–∞—à–∞ –∫”©–±–µ–π—Ç—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã',
                description: '“ö—ã—Å“õ–∞—à–∞ –∫”©–±–µ–π—Ç—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã–Ω “õ–æ–ª–¥–∞–Ω—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(8),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–í–∏–µ—Ç —Ç–µ–æ—Ä–µ–º–∞—Å—ã',
                description: '–í–∏–µ—Ç —Ç–µ–æ—Ä–µ–º–∞—Å—ã–Ω –æ“õ—ã–ø-“Ø–π—Ä–µ–Ω—É –∂”ô–Ω–µ “õ–æ–ª–¥–∞–Ω—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(12),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–ê–ª–≥–µ–±—Ä–∞ –±–æ–π—ã–Ω—à–∞ –±–∞“õ—ã–ª–∞—É –∂“±–º—ã—Å—ã',
                description: '”®—Ç—ñ–ª–≥–µ–Ω —Ç–∞“õ—ã—Ä—ã–ø—Ç–∞—Ä –±–æ–π—ã–Ω—à–∞ –±—ñ–ª—ñ–º–¥—ñ —Ç–µ–∫—Å–µ—Ä—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(15),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–¢–µ“£–¥–µ—É–ª–µ—Ä –∂“Ø–π–µ–ª–µ—Ä—ñ',
                description: '–°—ã–∑—ã“õ—Ç—ã“õ –∂”ô–Ω–µ –∫–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä –∂“Ø–π–µ—Å—ñ–Ω —à–µ—à—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(19),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–¢–µ“£—Å—ñ–∑–¥—ñ–∫—Ç–µ—Ä',
                description: '–°—ã–∑—ã“õ—Ç—ã“õ –∂”ô–Ω–µ –∫–≤–∞–¥—Ä–∞—Ç —Ç–µ“£—Å—ñ–∑–¥—ñ–∫—Ç–µ—Ä–¥—ñ —à–µ—à—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(22),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–§—É–Ω–∫—Ü–∏—è–ª–∞—Ä –∂”ô–Ω–µ –æ–ª–∞—Ä–¥—ã“£ –≥—Ä–∞—Ñ–∏–∫—Ç–µ—Ä—ñ',
                description: '–ù–µ–≥—ñ–∑–≥—ñ —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä–¥—ã –æ“õ—É –∂”ô–Ω–µ –≥—Ä–∞—Ñ–∏–∫—Ç–µ—Ä—ñ–Ω —Å–∞–ª—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(26),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–§—É–Ω–∫—Ü–∏—è–ª–∞—Ä –±–æ–π—ã–Ω—à–∞ –ø—Ä–∞–∫—Ç–∏–∫—É–º',
                description: '–§—É–Ω–∫—Ü–∏—è–ª–∞—Ä –±–æ–π—ã–Ω—à–∞ –µ—Å–µ–ø—Ç–µ—Ä —à–µ—à—É',
                studyPlanId: studyPlans[0].id,
                date: getDateInAugust2025(29),
            },
        }),

        // –£—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏ (10 –∫–ª–∞—Å—Å) - –∞–≤–≥—É—Å—Ç 2025
        prisma.lesson.create({
            data: {
                name: '–ñ–∞—Å—É—à–∞ “õ“±—Ä—ã–ª—ã—Å—ã',
                description: '–¶–∏—Ç–æ–ª–æ–≥–∏—è –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ, —ç—É–∫–∞—Ä–∏–æ—Ç—Ç—ã“õ –∂–∞—Å—É—à–∞ “õ“±—Ä—ã–ª—ã—Å—ã',
                studyPlanId: studyPlans[1].id,
                date: getDateInAugust2025(6),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–§–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑',
                description: '”®—Å—ñ–º–¥—ñ–∫—Ç–µ—Ä–¥–µ–≥—ñ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑ “Ø—Ä–¥—ñ—Å—ñ',
                studyPlanId: studyPlans[1].id,
                date: getDateInAugust2025(9),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '”®—Å—ñ–º–¥—ñ–∫—Ç–µ—Ä–¥—ñ“£ —Ç—ã–Ω—ã—Å –∞–ª—É—ã',
                description: '”®—Å—ñ–º–¥—ñ–∫—Ç–µ—Ä –º–µ–Ω –∂–∞–Ω—É–∞—Ä–ª–∞—Ä–¥—ã“£ —Ç—ã–Ω—ã—Å –∞–ª—É –ø—Ä–æ—Ü–µ—Å—Ç–µ—Ä—ñ',
                studyPlanId: studyPlans[1].id,
                date: getDateInAugust2025(13),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–ì–µ–Ω–µ—Ç–∏–∫–∞ –∂”ô–Ω–µ —Ç“±“õ—ã–º“õ—É–∞–ª–∞—É—à—ã–ª—ã“õ',
                description: '–ì–µ–Ω–µ—Ç–∏–∫–∞ –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ, –ú–µ–Ω–¥–µ–ª—å –∑–∞“£–¥–∞—Ä—ã',
                studyPlanId: studyPlans[1].id,
                date: getDateInAugust2025(16),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–ì–µ–Ω–µ—Ç–∏–∫–∞ –±–æ–π—ã–Ω—à–∞ –∑–µ—Ä—Ç—Ö–∞–Ω–∞–ª—ã“õ –∂“±–º—ã—Å',
                description: '–ì–µ–Ω–µ—Ç–∏–∫–∞–ª—ã“õ –µ—Å–µ–ø—Ç–µ—Ä —à—ã“ì–∞—Ä—É',
                studyPlanId: studyPlans[1].id,
                date: getDateInAugust2025(20),
            },
        }),

        // –£—Ä–æ–∫–∏ —Ñ–∏–∑–∏–∫–∏ (11 –∫–ª–∞—Å—Å) - –∞–≤–≥—É—Å—Ç 2025
        prisma.lesson.create({
            data: {
                name: '–ú–æ–ª–µ–∫—É–ª–∞–ª—ã“õ-–∫–∏–Ω–µ—Ç–∏–∫–∞–ª—ã“õ —Ç–µ–æ—Ä–∏—è',
                description: '–ú–ö–¢ –Ω–µ–≥—ñ–∑–≥—ñ “õ–∞“ì–∏–¥–∞–ª–∞—Ä—ã',
                studyPlanId: studyPlans[2].id,
                date: getDateInAugust2025(7),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–ì–∞–∑ –∑–∞“£–¥–∞—Ä—ã',
                description: '–ò–¥–µ–∞–ª –≥–∞–∑ –∑–∞“£–¥–∞—Ä—ã–Ω –æ“õ—É',
                studyPlanId: studyPlans[2].id,
                date: getDateInAugust2025(10),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞',
                description: '–¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞–Ω—ã“£ –±—ñ—Ä—ñ–Ω—à—ñ –∂”ô–Ω–µ –µ–∫—ñ–Ω—à—ñ –∑–∞“£–¥–∞—Ä—ã',
                studyPlanId: studyPlans[2].id,
                date: getDateInAugust2025(14),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞ –±–æ–π—ã–Ω—à–∞ –∑–µ—Ä—Ç—Ö–∞–Ω–∞–ª—ã“õ –∂“±–º—ã—Å',
                description: '–ñ—ã–ª—É–ª—ã“õ –ø—Ä–æ—Ü–µ—Å—Ç–µ—Ä–¥—ñ —Ç”ô–∂—ñ—Ä–∏–±–µ–ª—ñ–∫ –∑–µ—Ä—Ç—Ç–µ—É',
                studyPlanId: studyPlans[2].id,
                date: getDateInAugust2025(17),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞—Ç–∏–∫–∞',
                description: '–≠–ª–µ–∫—Ç—Ä ”©—Ä—ñ—Å—ñ –∂”ô–Ω–µ –æ–Ω—ã“£ —Å–∏–ø–∞—Ç—Ç–∞–º–∞–ª–∞—Ä—ã',
                studyPlanId: studyPlans[2].id,
                date: getDateInAugust2025(21),
            },
        }),

        // –£—Ä–æ–∫–∏ —Ö–∏–º–∏–∏ (9 –∫–ª–∞—Å—Å) - –∞–≤–≥—É—Å—Ç 2025
        prisma.lesson.create({
            data: {
                name: '–ü–µ—Ä–∏–æ–¥—Ç—ã“õ –∂“Ø–π–µ',
                description: '–ü–µ—Ä–∏–æ–¥—Ç—ã“õ –∑–∞“£ –∂”ô–Ω–µ —ç–ª–µ–º–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ –ø–µ—Ä–∏–æ–¥—Ç—ã“õ –∂“Ø–π–µ—Å—ñ',
                studyPlanId: studyPlans[3].id,
                date: getDateInAugust2025(11),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–•–∏–º–∏—è–ª—ã“õ –±–∞–π–ª–∞–Ω—ã—Å—Ç–∞—Ä',
                description: '–ö–æ–≤–∞–ª–µ–Ω—Ç—Ç—ñ–∫, –∏–æ–Ω–¥—ã“õ –∂”ô–Ω–µ –º–µ—Ç–∞–ª–ª–¥—ã“õ –±–∞–π–ª–∞–Ω—ã—Å',
                studyPlanId: studyPlans[3].id,
                date: getDateInAugust2025(18),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–•–∏–º–∏—è–ª—ã“õ —Ä–µ–∞–∫—Ü–∏—è–ª–∞—Ä –±–æ–π—ã–Ω—à–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ –∂“±–º—ã—Å',
                description: '–ó–µ—Ä—Ç—Ö–∞–Ω–∞–¥–∞ —Ö–∏–º–∏—è–ª—ã“õ —Ä–µ–∞–∫—Ü–∏—è–ª–∞—Ä –∂“Ø—Ä–≥—ñ–∑—É',
                studyPlanId: studyPlans[3].id,
                date: getDateInAugust2025(23),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '“ö—ã—à“õ—ã–ª–¥–∞—Ä –∂”ô–Ω–µ –Ω–µ–≥—ñ–∑–¥–µ—Ä',
                description: '“ö—ã—à“õ—ã–ª–¥–∞—Ä –º–µ–Ω –Ω–µ–≥—ñ–∑–¥–µ—Ä–¥—ñ“£ “õ–∞—Å–∏–µ—Ç—Ç–µ—Ä—ñ, –±–µ–π—Ç–∞—Ä–∞–ø—Ç–∞–Ω—É —Ä–µ–∞–∫—Ü–∏—è–ª–∞—Ä—ã',
                studyPlanId: studyPlans[3].id,
                date: getDateInAugust2025(27),
            },
        }),
        prisma.lesson.create({
            data: {
                name: '–¢–æ—Ç—ã“ì—É-—Ç–æ—Ç—ã“õ—Å—ã–∑–¥–∞–Ω—É —Ä–µ–∞–∫—Ü–∏—è–ª–∞—Ä—ã',
                description: '–¢–¢–†-–¥—ã –æ“õ—É –∂”ô–Ω–µ —Ç–µ“£–¥–µ—É–ª–µ—Ä “õ“±—Ä–∞—Å—Ç—ã—Ä—É',
                studyPlanId: studyPlans[3].id,
                date: getDateInAugust2025(30),
            },
        }),
    ]);

    console.log('üéØ –°–∞–±–∞“õ –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä—ã–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —É—Ä–æ–∫–æ–≤
    await Promise.all([
        prisma.materials.create({
            data: {
                lecture: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä ax¬≤ + bx + c = 0 —Ç“Ø—Ä—ñ–Ω–¥–µ –±–æ–ª–∞–¥—ã, –º“±–Ω–¥–∞ a ‚â† 0...',
                videoUrl: 'https://www.youtube.com/watch?v=example1',
                presentationUrl: 'https://docs.google.com/presentation/d/example1',
                lesson: {
                    connect: { id: lessons[0].id },
                },
            },
        }),
        prisma.materials.create({
            data: {
                lecture: '“ö—ã—Å“õ–∞—à–∞ –∫”©–±–µ–π—Ç—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã –µ—Å–µ–ø—Ç–µ—É–ª–µ—Ä–¥—ñ –∂–µ“£—ñ–ª–¥–µ—Ç—É–≥–µ –∫”©–º–µ–∫—Ç–µ—Å–µ–¥—ñ...',
                videoUrl: 'https://www.youtube.com/watch?v=example2',
                lesson: {
                    connect: { id: lessons[1].id },
                },
            },
        }),
    ]);

    console.log('üí∞ –¢”©–ª–µ–º–¥–µ—Ä–¥—ñ “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    await Promise.all([
        // –ü–ª–∞—Ç–µ–∂–∏ –¥–ª—è –ê–π–¥—ã –ö–∞–∑—ã–±–µ–∫–æ–≤–æ–π
        prisma.payment.create({
            data: {
                studentId: studentUsers[0].student.id,
                serviceType: 'tuition',
                serviceName: '2025 –∂—ã–ª“ì—ã —Ç–∞–º—ã–∑ –∞–π—ã –æ“õ—É –∞“õ—ã—Å—ã',
                amount: 45000,
                currency: 'KZT',
                dueDate: new Date('2025-08-01'),
                status: 'paid',
                paymentDate: new Date('2025-07-28'),
                paidAmount: 45000,
            },
        }),
        prisma.payment.create({
            data: {
                studentId: studentUsers[0].student.id,
                serviceType: 'meals',
                serviceName: '2025 –∂—ã–ª“ì—ã —Ç–∞–º—ã–∑ –∞–π—ã –∞—Å—Ö–∞–Ω–∞–ª—ã“õ —Ç–∞–º–∞“õ—Ç–∞–Ω—É',
                amount: 15000,
                currency: 'KZT',
                dueDate: new Date('2025-08-01'),
                status: 'paid',
                paymentDate: new Date('2025-07-30'),
                paidAmount: 15000,
            },
        }),
        // –ü–ª–∞—Ç–µ–∂–∏ –¥–ª—è –ê—Ä–º–∞–Ω–∞ –ñ–∞–∫–∏–ø–æ–≤–∞
        prisma.payment.create({
            data: {
                studentId: studentUsers[1].student.id,
                serviceType: 'tuition',
                serviceName: '2025 –∂—ã–ª“ì—ã —Ç–∞–º—ã–∑ –∞–π—ã –æ“õ—É –∞“õ—ã—Å—ã',
                amount: 45000,
                currency: 'KZT',
                dueDate: new Date('2025-08-01'),
                status: 'unpaid',
            },
        }),
        prisma.payment.create({
            data: {
                studentId: studentUsers[1].student.id,
                serviceType: 'transportation',
                serviceName: '2025 –∂—ã–ª“ì—ã —Ç–∞–º—ã–∑ –∞–π—ã –∫”©–ª—ñ–∫ “õ—ã–∑–º–µ—Ç—ñ',
                amount: 8000,
                currency: 'KZT',
                dueDate: new Date('2025-08-15'),
                status: 'partial',
                paymentDate: new Date('2025-08-10'),
                paidAmount: 4000,
            },
        }),
        // –ü–ª–∞—Ç–µ–∂–∏ –¥–ª—è –î–∞–Ω—ã –°–µ—Ä–∞–ª–∏–µ–≤–æ–π
        prisma.payment.create({
            data: {
                studentId: studentUsers[2].student.id,
                serviceType: 'tuition',
                serviceName: '2025 –∂—ã–ª“ì—ã —Ç–∞–º—ã–∑ –∞–π—ã –æ“õ—É –∞“õ—ã—Å—ã',
                amount: 45000,
                currency: 'KZT',
                dueDate: new Date('2025-08-01'),
                status: 'overdue',
            },
        }),
        prisma.payment.create({
            data: {
                studentId: studentUsers[2].student.id,
                serviceType: 'extra',
                serviceName: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞–¥–∞–Ω “õ–æ—Å—ã–º—à–∞ —Å–∞–±–∞“õ—Ç–∞—Ä',
                amount: 25000,
                currency: 'KZT',
                dueDate: new Date('2025-08-20'),
                status: 'unpaid',
            },
        }),
        // –ü–ª–∞—Ç–µ–∂–∏ –¥–ª—è –ë–µ–∫–∑–∞—Ç–∞ –û—Ä–∞–∑–±–∞–µ–≤–∞
        prisma.payment.create({
            data: {
                studentId: studentUsers[3].student.id,
                serviceType: 'tuition',
                serviceName: '2025 –∂—ã–ª“ì—ã —Ç–∞–º—ã–∑ –∞–π—ã –æ“õ—É –∞“õ—ã—Å—ã',
                amount: 45000,
                currency: 'KZT',
                dueDate: new Date('2025-08-01'),
                status: 'paid',
                paymentDate: new Date('2025-07-25'),
                paidAmount: 45000,
            },
        }),
    ]);

    console.log('üíº –ë—é–¥–∂–µ—Ç –±–∞–ø—Ç–∞—Ä—ã–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—å–∏ –±—é–¥–∂–µ—Ç–∞
    await Promise.all([
        // –î–æ—Ö–æ–¥—ã
        prisma.budgetItem.create({
            data: {
                name: '–û“õ—É –∞“õ—ã—Å—ã',
                type: 'INCOME',
                category: 'tuition',
                plannedAmount: 5000000,
                actualAmount: 4200000,
                currency: 'KZT',
                period: '2025 Q3',
                responsible: '–ö–∞—Å—ã–º–æ–≤–∞ –ì.–°.',
                status: 'ACTIVE',
                description: '–°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ –æ“õ—É –∞“õ—ã—Å—ã–Ω–∞–Ω –Ω–µ–≥—ñ–∑–≥—ñ —Ç–∞–±—ã—Å—Ç–∞—Ä',
            },
        }),
        prisma.budgetItem.create({
            data: {
                name: '–ì—Ä–∞–Ω—Ç—Ç–∞—Ä –º–µ–Ω —Å—É–±—Å–∏–¥–∏—è–ª–∞—Ä',
                type: 'INCOME',
                category: 'grants',
                plannedAmount: 1200000,
                actualAmount: 1200000,
                currency: 'KZT',
                period: '2025 Q3',
                responsible: '–ö–∞—Å—ã–º–æ–≤–∞ –ì.–°.',
                status: 'ACTIVE',
                description: '–ë—ñ–ª—ñ–º –±–µ—Ä—É–≥–µ –∞—Ä–Ω–∞–ª“ì–∞–Ω –º–µ–º–ª–µ–∫–µ—Ç—Ç—ñ–∫ –≥—Ä–∞–Ω—Ç—Ç–∞—Ä –º–µ–Ω —Å—É–±—Å–∏–¥–∏—è–ª–∞—Ä',
            },
        }),
        prisma.budgetItem.create({
            data: {
                name: '“ö–æ—Å—ã–º—à–∞ “õ—ã–∑–º–µ—Ç—Ç–µ—Ä',
                type: 'INCOME',
                category: 'services',
                plannedAmount: 300000,
                actualAmount: 180000,
                currency: 'KZT',
                period: '2025 Q3',
                responsible: '–ö–∞—Å—ã–º–æ–≤–∞ –ì.–°.',
                status: 'ACTIVE',
                description: '“ö–æ—Å—ã–º—à–∞ –±—ñ–ª—ñ–º –±–µ—Ä—É “õ—ã–∑–º–µ—Ç—Ç–µ—Ä—ñ–Ω–µ–Ω —Ç–∞–±—ã—Å',
            },
        }),
        // –†–∞—Å—Ö–æ–¥—ã
        prisma.budgetItem.create({
            data: {
                name: '–û“õ—ã—Ç—É—à—ã–ª–∞—Ä –µ“£–±–µ–∫–∞“õ—ã—Å—ã',
                type: 'EXPENSE',
                category: 'salaries',
                plannedAmount: 3200000,
                actualAmount: 3150000,
                currency: 'KZT',
                period: '2025 Q3',
                responsible: '–ö–∞—Å—ã–º–æ–≤–∞ –ì.–°.',
                status: 'ACTIVE',
                description: '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞–ª—ã“õ “õ“±—Ä–∞–º–Ω—ã“£ –µ“£–±–µ–∫–∞“õ—ã—Å—ã–Ω–∞ –Ω–µ–≥—ñ–∑–≥—ñ —à—ã“ì—ã–Ω–¥–∞—Ä',
            },
        }),
        prisma.budgetItem.create({
            data: {
                name: '–ö–æ–º–º—É–Ω–∞–ª–¥—ã“õ “õ—ã–∑–º–µ—Ç—Ç–µ—Ä',
                type: 'EXPENSE',
                category: 'utilities',
                plannedAmount: 800000,
                actualAmount: 850000,
                currency: 'KZT',
                period: '2025 Q3',
                responsible: '–ö–∞—Å—ã–º–æ–≤–∞ –ì.–°.',
                status: 'ACTIVE',
                description: '–≠–ª–µ–∫—Ç—Ä, –∂—ã–ª—ã—Ç—É, —Å—É –∂–∞–±–¥—ã“ì—ã–Ω–∞ —à—ã“ì—ã–Ω–¥–∞—Ä',
            },
        }),
        prisma.budgetItem.create({
            data: {
                name: '–û“õ—É –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä—ã –∂”ô–Ω–µ –∂–∞–±–¥—ã“õ',
                type: 'EXPENSE',
                category: 'materials',
                plannedAmount: 500000,
                actualAmount: 320000,
                currency: 'KZT',
                period: '2025 Q3',
                responsible: '–ö–∞—Å—ã–º–æ–≤–∞ –ì.–°.',
                status: 'ACTIVE',
                description: '–û“õ—É–ª—ã“õ—Ç–∞—Ä, –∫–µ“£—Å–µ —Ç–∞—É–∞—Ä–ª–∞—Ä—ã, –∑–µ—Ä—Ç—Ö–∞–Ω–∞–ª—ã“õ –∂–∞–±–¥—ã“õ —Å–∞—Ç—ã–ø –∞–ª—É',
            },
        }),
        prisma.budgetItem.create({
            data: {
                name: '–ñ”©–Ω–¥–µ—É –∂”ô–Ω–µ “õ—ã–∑–º–µ—Ç –∫”©—Ä—Å–µ—Ç—É',
                type: 'EXPENSE',
                category: 'infrastructure',
                plannedAmount: 400000,
                actualAmount: 200000,
                currency: 'KZT',
                period: '2025 Q3',
                responsible: '–ö–∞—Å—ã–º–æ–≤–∞ –ì.–°.',
                status: 'ACTIVE',
                description: '“í–∏–º–∞—Ä–∞—Ç—Ç–∞—Ä–¥—ã –∞“ì—ã–º–¥–∞“ì—ã –∂”©–Ω–¥–µ—É –∂”ô–Ω–µ –∂–∞–±–¥—ã“õ“õ–∞ “õ—ã–∑–º–µ—Ç –∫”©—Ä—Å–µ—Ç—É',
            },
        }),
    ]);

    console.log('üîî –•–∞–±–∞—Ä–ª–∞–º–∞–ª–∞—Ä–¥—ã “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    await Promise.all([
        prisma.notification.create({
            data: {
                userId: studentUsers[0].id,
                type: 'payment',
                message: '–û“õ—É –∞“õ—ã—Å—ã —Å”ô—Ç—Ç—ñ —Ç”©–ª–µ–Ω–¥—ñ',
                read: false,
            },
        }),
        prisma.notification.create({
            data: {
                userId: studentUsers[1].id,
                type: 'payment',
                message: '–ï—Å–∫–µ—Ä—Ç—É: –æ“õ—É –∞“õ—ã—Å—ã–Ω —Ç”©–ª–µ—É –º–µ—Ä–∑—ñ–º—ñ ”©—Ç—Ç—ñ',
                read: false,
            },
        }),
        prisma.notification.create({
            data: {
                userId: teachers[0].id,
                type: 'lesson',
                message: '"–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä" —Å–∞–±–∞“ì—ã 30 –º–∏–Ω—É—Ç—Ç–∞–Ω –∫–µ–π—ñ–Ω –±–∞—Å—Ç–∞–ª–∞–¥—ã',
                read: true,
            },
        }),
    ]);

    console.log('üèñÔ∏è –î–µ–º–∞–ª—ã—Å –∫–µ–∑–µ“£–¥–µ—Ä—ñ–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–∏–æ–¥—ã –∫–∞–Ω–∏–∫—É–ª –¥–ª—è –∞–≤–≥—É—Å—Ç–∞ 2025
    await Promise.all([
        prisma.vacation.create({
            data: {
                teacherId: teachers[0].teacher.id,
                type: 'vacation',
                startDate: getDateInAugust2025(1),
                endDate: getDateInAugust2025(14),
                days: 14,
                status: 'completed',
                comment: '–ñ–∞–∑“ì—ã –¥–µ–º–∞–ª—ã—Å',
            },
        }),
        prisma.vacation.create({
            data: {
                teacherId: teachers[1].teacher.id,
                type: 'vacation',
                startDate: getDateInAugust2025(15),
                endDate: getDateInAugust2025(28),
                days: 14,
                status: 'approved',
                comment: '–ñ–∞–∑ —Å–æ“£—ã–Ω–¥–∞“ì—ã –¥–µ–º–∞–ª—ã—Å',
            },
        }),
    ]);

    console.log('üìÖ –ö“Ø–Ω—Ç—ñ–∑–±–µ –æ“õ–∏“ì–∞–ª–∞—Ä—ã–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –¥–ª—è –∞–≤–≥—É—Å—Ç–∞ 2025
    await Promise.all([
        prisma.calendarEvent.create({
            data: {
                title: '–ë—ñ–ª—ñ–º –∫“Ø–Ω—ñ - –∂–∞“£–∞ –æ“õ—É –∂—ã–ª—ã–Ω—ã“£ –±–∞—Å—Ç–∞–ª—É—ã',
                description: '–°–∞–ª—Ç–∞–Ω–∞—Ç—Ç—ã —Å–∞–ø —Ç“Ø–∑–µ—É –∂”ô–Ω–µ –∞–ª“ì–∞—à“õ—ã —Å–∞–±–∞“õ—Ç–∞—Ä',
                startDate: getDateInAugust2025(1),
                endDate: getDateInAugust2025(1),
                location: '–®–∫–æ–ª—å–Ω—ã–π –¥–≤–æ—Ä',
                isAllDay: true,
                createdById: admin.id,
            },
        }),
        prisma.calendarEvent.create({
            data: {
                title: '10 —Å—ã–Ω—ã–ø—Ç–∞—Ä –∞—Ç–∞-–∞–Ω–∞–ª–∞—Ä –∂–∏–Ω–∞–ª—ã—Å—ã',
                description: '–ñ–∞“£–∞ –æ“õ—É –∂—ã–ª—ã–Ω–∞ –∂–æ—Å–ø–∞—Ä–ª–∞—Ä–¥—ã —Ç–∞–ª“õ—ã–ª–∞—É',
                startDate: getDateInAugust2025(10),
                endDate: getDateInAugust2025(10),
                location: '–ê–∫—Ç–æ–≤—ã–π –∑–∞–ª',
                isAllDay: false,
                createdById: admin.id,
            },
        }),
        prisma.calendarEvent.create({
            data: {
                title: '–ê–ª–≥–µ–±—Ä–∞ –±–æ–π—ã–Ω—à–∞ –±–∞“õ—ã–ª–∞—É –∂“±–º—ã—Å—ã',
                description: '–ê–ª–≥–µ–±—Ä–∞–¥–∞–Ω “õ–æ—Ä—ã—Ç—ã–Ω–¥—ã –±–∞“õ—ã–ª–∞—É –∂“±–º—ã—Å—ã',
                startDate: getDateInAugust2025(15),
                endDate: getDateInAugust2025(15),
                location: '–ê—É–¥–∏—Ç–æ—Ä–∏—è 101',
                isAllDay: false,
                createdById: teachers[0].id,
            },
        }),
    ]);

    console.log('üìù –°–∞–±–∞“õ –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Ä–æ–∫–æ–≤ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –≤—Å–µ–º —É—Ä–æ–∫–∞–º
    const lessonResults = [];

    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —É—Ä–æ–∫–æ–≤ –∞–ª–≥–µ–±—Ä—ã (–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ 10–ê –∏ 10–ë)
    const algebraStudents = studentUsers.slice(0, 7); // –ü–µ—Ä–≤—ã–µ 7 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ 10–ê –∏ 10–ë
    const algebraLessons = lessons.slice(0, 8); // –ü–µ—Ä–≤—ã–µ 8 —É—Ä–æ–∫–æ–≤ –∞–ª–≥–µ–±—Ä—ã

    for (const lesson of algebraLessons) {
        for (let i = 0; i < algebraStudents.length; i++) {
            const student = algebraStudents[i];
            // –ê–π–¥–∞ (0) - –æ—Ç–ª–∏—á–Ω–∏—Ü–∞, –ê—Ä–º–∞–Ω (1) - —Ö–æ—Ä–æ—à–∏—Å—Ç —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏, –æ—Å—Ç–∞–ª—å–Ω—ã–µ - —Å—Ä–µ–¥–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç—ã
            let score, comment, attendance = true;
            
            if (i === 0) { // –ê–π–¥–∞ - –æ—Ç–ª–∏—á–Ω–∏—Ü–∞
                score = Math.random() > 0.1 ? 5 : 4;
                comment = score === 5 ? '–ï—Å–µ–ø—Ç–µ—Ä–¥—ñ ”©—Ç–µ –∂–∞“õ—Å—ã –æ—Ä—ã–Ω–¥–∞–¥—ã' : '–ñ–∞“õ—Å—ã –∂“±–º—ã—Å, –∞–∑–¥–∞“ì–∞–Ω –∫–µ–º—à—ñ–ª—ñ–∫—Ç–µ—Ä –±–∞—Ä';
            } else if (i === 1) { // –ê—Ä–º–∞–Ω - –ø—Ä–æ–±–ª–µ–º–Ω—ã–π —Å—Ç—É–¥–µ–Ω—Ç
                score = Math.random() > 0.3 ? (Math.random() > 0.5 ? 4 : 3) : 2;
                attendance = Math.random() > 0.2;
                comment = !attendance ? '–°–∞–±–∞“õ“õ–∞ “õ–∞—Ç—ã—Å“õ–∞–Ω –∂–æ“õ' : 
                         score <= 2 ? '“Æ–π —Ç–∞–ø—Å—ã—Ä–º–∞—Å—ã–Ω –æ—Ä—ã–Ω–¥–∞–º–∞–¥—ã' : '“ö–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω–∞—Ä–ª—ã“õ';
            } else { // –û—Å—Ç–∞–ª—å–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã
                score = Math.random() > 0.1 ? (Math.random() > 0.4 ? 4 : 3) : (Math.random() > 0.5 ? 5 : 2);
                attendance = Math.random() > 0.05;
                comment = !attendance ? '“ö–∞—Ç—ã—Å–ø–∞–¥—ã' : 
                         score === 5 ? '”®—Ç–µ –∂–∞“õ—Å—ã –∂“±–º—ã—Å' :
                         score === 4 ? '–ú–∞—Ç–µ—Ä–∏–∞–ª–¥—ã –∂–∞“õ—Å—ã —Ç“Ø—Å—ñ–Ω–µ–¥—ñ' :
                         score === 3 ? '“ö–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω–∞—Ä–ª—ã“õ' : '–ë—ñ–ª—ñ–º—ñ–Ω –∂–µ—Ç—ñ–ª–¥—ñ—Ä—É –∫–µ—Ä–µ–∫';
            }

            lessonResults.push(
                prisma.lessonResult.create({
                    data: {
                        lessonId: lesson.id,
                        studentId: student.student.id,
                        lessonScore: attendance ? score : null,
                        attendance: attendance,
                        lessonScorecomment: comment,
                    },
                })
            );
        }
    }

    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —É—Ä–æ–∫–æ–≤ –±–∏–æ–ª–æ–≥–∏–∏ (–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ 10–ë)
    const biologyStudents = studentUsers.slice(4, 7); // –°—Ç—É–¥–µ–Ω—Ç—ã 10–ë
    const biologyLessons = lessons.slice(8, 13); // –£—Ä–æ–∫–∏ –±–∏–æ–ª–æ–≥–∏–∏

    for (const lesson of biologyLessons) {
        for (let i = 0; i < biologyStudents.length; i++) {
            const student = biologyStudents[i];
            // –î–∞–Ω–∞ (0 –≤ —ç—Ç–æ–º –º–∞—Å—Å–∏–≤–µ) - –æ—Ç–ª–∏—á–Ω–∏—Ü–∞ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏
            let score, comment, attendance = true;
            
            if (i === 0) { // –î–∞–Ω–∞ - –æ—Ç–ª–∏—á–Ω–∏—Ü–∞ –ø–æ –±–∏–æ–ª–æ–≥–∏–∏
                score = Math.random() > 0.05 ? 5 : 4;
                comment = score === 5 ? '–ú–∞—Ç–µ—Ä–∏–∞–ª–¥—ã —Ç–∞–º–∞—à–∞ –º–µ“£–≥–µ—Ä–≥–µ–Ω' : '”®—Ç–µ –∂–∞“õ—Å—ã';
            } else {
                score = Math.random() > 0.1 ? (Math.random() > 0.3 ? 4 : 3) : (Math.random() > 0.7 ? 5 : 2);
                attendance = Math.random() > 0.1;
                comment = !attendance ? '“ö–∞—Ç—ã—Å–ø–∞–¥—ã' : 
                         score === 5 ? '”®—Ç–µ –∂–∞“õ—Å—ã –∂“±–º—ã—Å' :
                         score === 4 ? '–ë–∏–æ–ª–æ–≥–∏—è–Ω—ã –∂–∞“õ—Å—ã —Ç“Ø—Å—ñ–Ω–µ–¥—ñ' :
                         score === 3 ? '–û—Ä—Ç–∞—à–∞ –¥–µ“£–≥–µ–π' : '–ö”©–±—ñ—Ä–µ–∫ –Ω–∞–∑–∞—Ä “õ–∞–∂–µ—Ç';
            }

            lessonResults.push(
                prisma.lessonResult.create({
                    data: {
                        lessonId: lesson.id,
                        studentId: student.student.id,
                        lessonScore: attendance ? score : null,
                        attendance: attendance,
                        lessonScorecomment: comment,
                    },
                })
            );
        }
    }

    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —É—Ä–æ–∫–æ–≤ —Ñ–∏–∑–∏–∫–∏ (–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ 11–ê –∏ 11–ë)
    const physicsStudents = studentUsers.slice(7, 10); // –°—Ç—É–¥–µ–Ω—Ç—ã 11–ê –∏ 11–ë
    const physicsLessons = lessons.slice(13, 18); // –£—Ä–æ–∫–∏ —Ñ–∏–∑–∏–∫–∏

    for (const lesson of physicsLessons) {
        for (let i = 0; i < physicsStudents.length; i++) {
            const student = physicsStudents[i];
            // –ë–µ–∫–∑–∞—Ç (0) - —Ö–æ—Ä–æ—à–∏—Å—Ç, –ó–∞—Ä–∏–Ω–∞ (1) - –æ—Ç–ª–∏—á–Ω–∏—Ü–∞, –î–∏–∞—Å (2) - —Å—Ä–µ–¥–Ω–∏–π
            let score, comment, attendance = true;
            
            if (i === 0) { // –ë–µ–∫–∑–∞—Ç - —Ö–æ—Ä–æ—à–∏—Å—Ç
                score = Math.random() > 0.2 ? 4 : (Math.random() > 0.5 ? 5 : 3);
                comment = score === 5 ? '–¢–µ–æ—Ä–∏—è–Ω—ã ”©—Ç–µ –∂–∞“õ—Å—ã —Ç“Ø—Å—ñ–Ω–µ–¥—ñ' :
                         score === 4 ? '–¢–µ–æ—Ä–∏—è–Ω—ã –∂–∞“õ—Å—ã —Ç“Ø—Å—ñ–Ω–µ–¥—ñ' : '–ö”©–±—ñ—Ä–µ–∫ –ø—Ä–∞–∫—Ç–∏–∫–∞ –∫–µ—Ä–µ–∫';
            } else if (i === 1) { // –ó–∞—Ä–∏–Ω–∞ - –æ—Ç–ª–∏—á–Ω–∏—Ü–∞
                score = Math.random() > 0.1 ? 5 : 4;
                comment = score === 5 ? '–§–∏–∑–∏–∫–∞–Ω—ã –∫–µ—Ä–µ–º–µ—Ç –±—ñ–ª–µ–¥—ñ' : '”®—Ç–µ –∂–∞“õ—Å—ã';
            } else { // –î–∏–∞—Å - —Å—Ä–µ–¥–Ω–∏–π
                score = Math.random() > 0.2 ? 3 : (Math.random() > 0.6 ? 4 : 2);
                attendance = Math.random() > 0.15;
                comment = !attendance ? '“ö–∞—Ç—ã—Å–ø–∞–¥—ã' : 
                         score === 4 ? '–ñ–∞“õ—Å—ã' :
                         score === 3 ? '“ö–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω–∞—Ä–ª—ã“õ' : '–ë—ñ–ª—ñ–º—ñ ”ô–ª—Å—ñ–∑';
            }

            lessonResults.push(
                prisma.lessonResult.create({
                    data: {
                        lessonId: lesson.id,
                        studentId: student.student.id,
                        lessonScore: attendance ? score : null,
                        attendance: attendance,
                        lessonScorecomment: comment,
                    },
                })
            );
        }
    }

    // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è —É—Ä–æ–∫–æ–≤ —Ö–∏–º–∏–∏ (–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ 9–ê)
    const chemistryStudents = studentUsers.slice(10, 12); // –°—Ç—É–¥–µ–Ω—Ç—ã 9–ê
    const chemistryLessons = lessons.slice(18, 23); // –£—Ä–æ–∫–∏ —Ö–∏–º–∏–∏

    for (const lesson of chemistryLessons) {
        for (let i = 0; i < chemistryStudents.length; i++) {
            const student = chemistryStudents[i];
            // –ê—Ä—É–∂–∞–Ω (0) - —Ö–æ—Ä–æ—à–∏—Å—Ç–∫–∞, ”ò–ª—ñ–±–µ–∫ (1) - —Å—Ä–µ–¥–Ω–∏–π —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏
            let score, comment, attendance = true;
            
            if (i === 0) { // –ê—Ä—É–∂–∞–Ω - —Ö–æ—Ä–æ—à–∏—Å—Ç–∫–∞
                score = Math.random() > 0.2 ? (Math.random() > 0.4 ? 4 : 5) : 3;
                comment = score === 5 ? '–•–∏–º–∏—è–Ω—ã ”©—Ç–µ –∂–∞“õ—Å—ã –º–µ“£–≥–µ—Ä–≥–µ–Ω' :
                         score === 4 ? '–ñ–∞“õ—Å—ã –±—ñ–ª—ñ–º' : '“ö–∞–ª—ã–ø—Ç—ã';
            } else { // ”ò–ª—ñ–±–µ–∫ - –ø—Ä–æ–±–ª–µ–º–Ω—ã–π
                score = Math.random() > 0.4 ? 3 : (Math.random() > 0.6 ? 2 : 4);
                attendance = Math.random() > 0.25;
                comment = !attendance ? '“ö–∞—Ç—ã—Å–ø–∞–¥—ã' : 
                         score === 4 ? '–ö“Ø—Ç–ø–µ–≥–µ–Ω –∂–∞“õ—Å—ã –Ω”ô—Ç–∏–∂–µ' :
                         score === 3 ? '“ö–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω–∞—Ä–ª—ã“õ' : '–ù–∞—à–∞—Ä –¥–∞–π—ã–Ω–¥–∞–ª“ì–∞–Ω';
            }

            lessonResults.push(
                prisma.lessonResult.create({
                    data: {
                        lessonId: lesson.id,
                        studentId: student.student.id,
                        lessonScore: attendance ? score : null,
                        attendance: attendance,
                        lessonScorecomment: comment,
                    },
                })
            );
        }
    }

    await Promise.all(lessonResults);

    console.log('üí¨ –ß–∞—Ç—Ç–∞—Ä–¥—ã “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —á–∞—Ç—ã –º–µ–∂–¥—É —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏ –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏
    await Promise.all([
        // –ß–∞—Ç –º–µ–∂–¥—É —Ä–æ–¥–∏—Ç–µ–ª–µ–º –ê–π–¥—ã –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–º –∞–ª–≥–µ–±—Ä—ã
        prisma.chatRoom.create({
            data: {
                name: '–ê–π–¥–∞–Ω—ã“£ “Ø–ª–≥–µ—Ä—ñ–º—ñ–Ω —Ç–∞–ª“õ—ã–ª–∞—É',
                isGroup: false,
                createdBy: parents[0].id,
                participants: {
                    create: [
                        { userId: parents[0].id },
                        { userId: teachers[0].id },
                    ],
                },
                messages: {
                    create: [
                        {
                            senderId: parents[0].id,
                            content: '–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ! –ê–π–¥–∞–Ω—ã“£ –∞–ª–≥–µ–±—Ä–∞ –ø”ô–Ω—ñ “õ–∞–ª–∞–π?',
                            createdAt: getDateInAugust2025(15),
                        },
                        {
                            senderId: teachers[0].id,
                            content: '–°”ô–ª–µ–º! –ê–π–¥–∞ ”©—Ç–µ –∂–∞“õ—Å—ã –Ω”ô—Ç–∏–∂–µ –∫”©—Ä—Å–µ—Ç—ñ–ø –∂“Ø—Ä, ”©—Ç–µ —Ç—ã—Ä—ã—Å“õ–∞“õ –æ“õ—É—à—ã.',
                            createdAt: getDateInAugust2025(15),
                        },
                    ],
                },
            },
        }),
    ]);

    console.log('üìù –ï—Å–∫–µ—Ä—Ç–ø–µ–ª–µ—Ä –º–µ–Ω –ø—ñ–∫—ñ—Ä–ª–µ—Ä–¥—ñ “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –∑–∞–º–µ—á–∞–Ω–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    await Promise.all([
        prisma.studentRemark.create({
            data: {
                studentId: studentUsers[1].student.id,
                teacherId: teachers[0].id,
                type: 'ACADEMIC',
                title: '“Æ–π —Ç–∞–ø—Å—ã—Ä–º–∞—Å—ã–Ω –æ—Ä—ã–Ω–¥–∞–º–∞–¥—ã',
                content: '–ê–ª–≥–µ–±—Ä–∞ –±–æ–π—ã–Ω—à–∞ “Ø–π —Ç–∞–ø—Å—ã—Ä–º–∞—Å—ã–Ω –æ—Ä—ã–Ω–¥–∞–º–∞“ì–∞–Ω',
                isPrivate: true,
                createdAt: getDateInAugust2025(10),
            },
        }),
        prisma.studentRemark.create({
            data: {
                studentId: studentUsers[1].student.id,
                teacherId: admin.id,
                type: 'BEHAVIOR',
                title: '–¢”ô—Ä—Ç—ñ–ø –±“±–∑—É—à—ã–ª—ã“õ',
                content: '“Æ–∑—ñ–ª—ñ—Å –∫–µ–∑—ñ–Ω–¥–µ —Ç”ô—Ä—Ç—ñ–ø —Å–∞“õ—Ç–∞–º–∞“ì–∞–Ω',
                isPrivate: true,
                createdAt: getDateInAugust2025(14),
            },
        }),
    ]);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    await Promise.all([
        prisma.studentComment.create({
            data: {
                studentId: studentUsers[0].student.id,
                teacherId: teachers[0].id,
                title: '–°–∞–±–∞“õ—Ç–∞ ”©—Ç–µ –∂–∞“õ—Å—ã –∂“±–º—ã—Å',
                content: '–°–∞–±–∞“õ—Ç–∞“ì—ã –µ—Å–µ–ø—Ç–µ—Ä–¥—ñ —Ç–∞–º–∞—à–∞ —à—ã“ì–∞—Ä–¥—ã, “Ø–π–¥–µ –¥–∞–π—ã–Ω–¥–∞–ª“ì–∞–Ω—ã –∫”©—Ä—ñ–Ω—ñ–ø —Ç“±—Ä',
                type: 'ACADEMIC',
                isPrivate: true,
                createdAt: getDateInAugust2025(5),
            },
        }),
        prisma.studentComment.create({
            data: {
                studentId: studentUsers[2].student.id,
                teacherId: teachers[1].id,
                title: '–¢–∞–º–∞—à–∞ –∑–µ—Ä—Ç—Ö–∞–Ω–∞–ª—ã“õ –∂“±–º—ã—Å',
                content: '–ë–∏–æ–ª–æ–≥–∏—è –±–æ–π—ã–Ω—à–∞ –∑–µ—Ä—Ç—Ö–∞–Ω–∞–ª—ã“õ –∂“±–º—ã—Å—Ç—ã —Ç–∞–º–∞—à–∞ –æ—Ä—ã–Ω–¥–∞–¥—ã!',
                type: 'ACADEMIC',
                isPrivate: true,
                createdAt: getDateInAugust2025(18),
            },
        }),
    ]);

    console.log('üìö “ö–æ—Å—ã–º—à–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–¥–∞—Ä–¥—ã “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –±–æ–ª—å—à–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è —É—Ä–æ–∫–æ–≤
    await Promise.all([
        prisma.materials.create({
            data: {
                lecture: '–ñ–∞—Å—É—à–∞ “õ“±—Ä—ã–ª—ã—Å—ã–Ω–∞ –º–µ–º–±—Ä–∞–Ω–∞, —Ü–∏—Ç–æ–ø–ª–∞–∑–º–∞ –∂”ô–Ω–µ –æ—Ä–≥–∞–Ω–æ–∏–¥—Ç–∞—Ä –∫—ñ—Ä–µ–¥—ñ...',
                videoUrl: 'https://www.youtube.com/watch?v=biology1',
                presentationUrl: 'https://docs.google.com/presentation/d/biology1',
                lesson: {
                    connect: { id: lessons[8].id }, // –°—Ç—Ä–æ–µ–Ω–∏–µ –∫–ª–µ—Ç–∫–∏
                },
            },
        }),
        prisma.materials.create({
            data: {
                lecture: '–ú–æ–ª–µ–∫—É–ª–∞–ª—ã“õ-–∫–∏–Ω–µ—Ç–∏–∫–∞–ª—ã“õ —Ç–µ–æ—Ä–∏—è –≥–∞–∑–¥–∞—Ä–¥—ã“£ “õ–∞—Å–∏–µ—Ç—Ç–µ—Ä—ñ–Ω —Ç“Ø—Å—ñ–Ω–¥—ñ—Ä–µ–¥—ñ...',
                videoUrl: 'https://www.youtube.com/watch?v=physics1',
                lesson: {
                    connect: { id: lessons[13].id }, // –ú–ö–¢
                },
            },
        }),
    ]);

    console.log('üìù KPI “Ø—à—ñ–Ω –ø—ñ–∫—ñ—Ä (feedback) —à–∞–±–ª–æ–Ω–¥–∞—Ä—ã–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —à–∞–±–ª–æ–Ω—ã —Ñ–∏–¥–±–µ–∫–æ–≤ —Å KPI –≤–æ–ø—Ä–æ—Å–∞–º–∏
    const feedbackTemplates = await Promise.all([
        // –®–∞–±–ª–æ–Ω –¥–ª—è –æ—Ü–µ–Ω–∫–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ (–æ—Å–Ω–æ–≤–Ω–æ–π –¥–ª—è KPI —É–¥–µ—Ä–∂–∞–Ω–∏—è)
        prisma.feedbackTemplate.create({
            data: {
                name: 'teacher_evaluation_students',
                role: 'STUDENT',
                title: '–°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ –æ“õ—ã—Ç—É—à—ã–Ω—ã –±–∞“ì–∞–ª–∞—É—ã',
                description: '–ê–π —Å–∞–π—ã–Ω“ì—ã –æ“õ—ã—Ç—É —Å–∞–ø–∞—Å—ã –º–µ–Ω —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ “õ–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω—É –¥–µ“£–≥–µ–π—ñ–Ω –±–∞“ì–∞–ª–∞—É',
                questions: [
                    {
                        id: 'teaching_quality',
                        question: '–û“õ—ã—Ç—É —Å–∞–ø–∞—Å—ã–Ω “õ–∞–ª–∞–π –±–∞“ì–∞–ª–∞–π—Å—ã–∑?',
                        type: 'RATING_1_5',
                        category: 'teaching',
                        required: true,
                        kpiMetric: 'TEACHING_QUALITY',
                        isKpiRelevant: true,
                        kpiWeight: 2
                    },
                    {
                        id: 'lesson_effectiveness',
                        question: '–û—Å—ã –æ“õ—ã—Ç—É—à—ã–Ω—ã“£ —Å–∞–±–∞“õ—Ç–∞—Ä—ã “õ–∞–Ω—à–∞–ª—ã“õ—Ç—ã —Ç–∏—ñ–º–¥—ñ?',
                        type: 'RATING_1_5',
                        category: 'effectiveness',
                        required: true,
                        kpiMetric: 'LESSON_EFFECTIVENESS',
                        isKpiRelevant: true,
                        kpiWeight: 2
                    },
                    {
                        id: 'student_retention',
                        question: '–û—Å—ã –æ“õ—ã—Ç—É—à—ã–¥–∞–Ω ”ô—Ä—ñ “õ–∞—Ä–∞–π –æ“õ—É–¥—ã –∂–∞–ª“ì–∞—Å—Ç—ã—Ä–º–∞“õ—Å—ã–∑ –±–∞?',
                        type: 'YES_NO',
                        category: 'retention',
                        required: true,
                        kpiMetric: 'STUDENT_RETENTION',
                        isKpiRelevant: true,
                        kpiWeight: 3
                    },
                    {
                        id: 'recommendation',
                        question: '–ë“±–ª –æ“õ—ã—Ç—É—à—ã–Ω—ã –±–∞—Å“õ–∞ —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–≥–µ “±—Å—ã–Ω–∞—Ä –º–∞ –µ–¥—ñ“£—ñ–∑?',
                        type: 'YES_NO',
                        category: 'recommendation',
                        required: true,
                        kpiMetric: 'RECOMMENDATION',
                        isKpiRelevant: true,
                        kpiWeight: 2
                    },
                    {
                        id: 'overall_satisfaction',
                        question: '–û—Å—ã –æ“õ—ã—Ç—É—à—ã–¥–∞–Ω –∞–ª“ì–∞–Ω –∂–∞–ª–ø—ã ”ô—Å–µ—Ä—ñ“£—ñ–∑ (“õ–∞–Ω–∞“ì–∞—Ç –¥–µ“£–≥–µ–π—ñ)',
                        type: 'RATING_1_10',
                        category: 'satisfaction',
                        required: true,
                        kpiMetric: 'OVERALL_EXPERIENCE',
                        isKpiRelevant: true,
                        kpiWeight: 1
                    },
                    {
                        id: 'improvement_suggestions',
                        question: '–û“õ—ã—Ç—É–¥–∞ –Ω–µ–Ω—ñ –∂–∞“õ—Å–∞—Ä—Ç—É“ì–∞ –±–æ–ª–∞–¥—ã?',
                        type: 'TEXT',
                        category: 'feedback',
                        required: false,
                        isKpiRelevant: false
                    }
                ],
                isActive: true,
                frequency: 'MONTHLY',
                priority: 1,
                hasKpiQuestions: true,
                kpiMetrics: ['STUDENT_RETENTION', 'TEACHING_QUALITY', 'LESSON_EFFECTIVENESS', 'RECOMMENDATION', 'OVERALL_EXPERIENCE']
            },
        }),
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —à–∞–±–ª–æ–Ω –¥–ª—è –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏
        prisma.feedbackTemplate.create({
            data: {
                name: 'student_general_satisfaction',
                role: 'STUDENT',
                title: '–û“õ—É–º–µ–Ω –∂–∞–ª–ø—ã “õ–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω—É',
                description: '–°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ –∂–∞–ª–ø—ã “õ–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω—É –¥–µ“£–≥–µ–π—ñ–Ω —Ç–æ“õ—Å–∞–Ω —Å–∞–π—ã–Ω –±–∞“ì–∞–ª–∞—É',
                questions: [
                    {
                        id: 'school_satisfaction',
                        question: '–ë—ñ–∑–¥—ñ“£ –±—ñ–ª—ñ–º –æ—Ä–Ω—ã–Ω–¥–∞“ì—ã –æ“õ—É“ì–∞ “õ–∞–Ω—à–∞–ª—ã“õ—Ç—ã “õ–∞–Ω–∞“ì–∞—Ç—Ç–∞–Ω–∞—Å—ã–∑?',
                        type: 'RATING_1_10',
                        category: 'general',
                        required: true,
                        kpiMetric: 'OVERALL_EXPERIENCE',
                        isKpiRelevant: true,
                        kpiWeight: 1
                    },
                    {
                        id: 'motivation_level',
                        question: '–û“õ—É“ì–∞ –¥–µ–≥–µ–Ω –º–æ—Ç–∏–≤–∞—Ü–∏—è –¥–µ“£–≥–µ–π—ñ“£—ñ–∑ “õ–∞–ª–∞–π ”©–∑–≥–µ—Ä–¥—ñ?',
                        type: 'RATING_1_5',
                        category: 'motivation',
                        required: true
                    }
                ],
                isActive: true,
                frequency: 'QUARTERLY',
                priority: 2,
                hasKpiQuestions: true,
                kpiMetrics: ['OVERALL_EXPERIENCE']
            },
        })
    ]);

    console.log('üí¨ –°—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ –æ“õ—ã—Ç—É—à—ã–ª–∞—Ä –∂–∞–π–ª—ã –ø—ñ–∫—ñ—Ä –∂–∞—É–∞–ø—Ç–∞—Ä—ã–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã—Ö –æ—Ü–µ–Ω–æ–∫
    const createFeedbackAnswer = (teacherRating: number) => {
        // teacherRating: 1-—Ö—É–¥—à–∏–π, 5-–ª—É—á—à–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
        const baseScore = teacherRating;
        const variation = 0.5; // –Ω–µ–±–æ–ª—å—à–∞—è –≤–∞—Ä–∏–∞—Ü–∏—è –≤ –æ—Ç–≤–µ—Ç–∞—Ö
        
        return {
            teaching_quality: Math.min(5, Math.max(1, Math.round(baseScore + (Math.random() - 0.5) * variation))),
            lesson_effectiveness: Math.min(5, Math.max(1, Math.round(baseScore + (Math.random() - 0.5) * variation))),
            student_retention: baseScore >= 3, // –µ—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ 3 –∏ –≤—ã—à–µ, —Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
            recommendation: baseScore >= 4, // –µ—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ 4 –∏ –≤—ã—à–µ, —Ç–æ –ø–æ—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç
            overall_satisfaction: Math.min(10, Math.max(1, Math.round((baseScore * 2) + (Math.random() - 0.5) * variation))),
            improvement_suggestions: baseScore < 3 ? '–ö”©–±—ñ—Ä–µ–∫ —Ç”ô–∂—ñ—Ä–∏–±–µ–ª—ñ–∫ —Ç–∞–ø—Å—ã—Ä–º–∞–ª–∞—Ä “õ–∞–∂–µ—Ç' : '–ë–∞—Ä–ª—ã“ì—ã —Ç–∞–º–∞—à–∞!'
        };
    };

    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–¥–±–µ–∫ –æ—Ç–≤–µ—Ç—ã –æ—Ç –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ –∫–∞–∂–¥–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ
    const feedbackResponses = [];
    
    // –†–µ–π—Ç–∏–Ω–≥–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π (1-5, –≥–¥–µ 5 - –ª—É—á—à–∏–π)
    const teacherRatings = [
        { teacher: teachers[0], rating: 5 }, // –ò–≤–∞–Ω–æ–≤–∞ - –æ—Ç–ª–∏—á–Ω—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
        { teacher: teachers[1], rating: 4 }, // –ê–ª–∏–µ–≤ - —Ö–æ—Ä–æ—à–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å  
        { teacher: teachers[2], rating: 3 }, // –¢—É–ª–µ–≥–µ–Ω–æ–≤ - —Å—Ä–µ–¥–Ω–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
        { teacher: teachers[3], rating: 2 }, // –ù–∞–∑–∞—Ä–±–∞–µ–≤–∞ - —Å–ª–∞–±—ã–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å
    ];

    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–¥–±–µ–∫–∏ –æ—Ç –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –æ –∫–∞–∂–¥–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –º–µ—Å—è—Ü–∞
    for (const { teacher, rating } of teacherRatings) {
        for (const studentUser of studentUsers) {
            // –°–æ–∑–¥–∞–µ–º —Ñ–∏–¥–±–µ–∫–∏ –∑–∞ —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
            const periods = ['2025-07', '2025-08', '2025-09'];
            
            for (const period of periods) {
                const answers = createFeedbackAnswer(rating);
                
                feedbackResponses.push(
                    prisma.feedbackResponse.create({
                        data: {
                            userId: studentUser.id,
                            templateId: feedbackTemplates[0].id,
                            answers: answers,
                            isCompleted: true,
                            period: period,
                            aboutTeacherId: teacher.teacher.id, // –ö–ª—é—á–µ–≤–æ–µ –ø–æ–ª–µ - –æ –∫–∞–∫–æ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ —Ñ–∏–¥–±–µ–∫
                            submittedAt: new Date(`${period}-15T10:00:00Z`),
                        },
                    })
                );
            }
        }
    }

    await Promise.all(feedbackResponses);

    console.log('üìä –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä “Ø—à—ñ–Ω –ø—ñ–∫—ñ—Ä –º”ô—Ä—Ç–µ–±–µ–ª–µ—Ä—ñ–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å —Ñ–∏–¥–±–µ–∫–æ–≤ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    const feedbackStatuses = studentUsers.map(student => 
        prisma.userFeedbackStatus.create({
            data: {
                userId: student.id,
                hasCompletedMandatory: true,
                lastCompletedAt: new Date('2025-09-15'),
                currentPeriod: '2025-09',
                nextDueDate: new Date('2025-10-15'),
            },
        })
    );

    await Promise.all(feedbackStatuses);

    console.log('üèÜ KPI “Ø—à—ñ–Ω –æ“õ—ã—Ç—É—à—ã–ª–∞—Ä –∂–µ—Ç—ñ—Å—Ç—ñ–∫—Ç–µ—Ä—ñ–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    await Promise.all([
        // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –ò–≤–∞–Ω–æ–≤–æ–π (–ª—É—á—à–∏–π –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å)
        prisma.teacherAchievement.create({
            data: {
                teacherId: teachers[0].teacher.id,
                type: 'QUALIFICATION',
                title: '–ó–∞–º–∞–Ω–∞—É–∏ –æ“õ—ã—Ç—É ”ô–¥—ñ—Å—Ç–µ—Ä—ñ –±–æ–π—ã–Ω—à–∞ –±—ñ–ª—ñ–∫—Ç—ñ–ª—ñ–∫—Ç—ñ –∞—Ä—Ç—Ç—ã—Ä—É',
                description: '–ë—ñ–ª—ñ–∫—Ç—ñ–ª—ñ–∫—Ç—ñ –∞—Ä—Ç—Ç—ã—Ä—É –∫—É—Ä—Å—Ç–∞—Ä—ã–Ω–∞–Ω ”©—Ç—Ç—ñ',
                date: getDateInAugust2025(15),
                points: 50,
                isVerified: true,
                verifiedAt: getDateInAugust2025(20),
            },
        }),
        prisma.teacherAchievement.create({
            data: {
                teacherId: teachers[0].teacher.id,
                type: 'TEAM_EVENT',
                title: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞–ª—ã“õ –æ–ª–∏–º–ø–∏–∞–¥–∞–Ω—ã “±–π—ã–º–¥–∞—Å—Ç—ã—Ä—É',
                description: '–ú–µ–∫—Ç–µ–ø—ñ—à—ñ–ª—ñ–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –æ–ª–∏–º–ø–∏–∞–¥–∞—Å—ã–Ω “±–π—ã–º–¥–∞—Å—Ç—ã—Ä–¥—ã –∂”ô–Ω–µ ”©—Ç–∫—ñ–∑–¥—ñ',
                date: getDateInAugust2025(10),
                points: 30,
                isVerified: true,
                verifiedAt: getDateInAugust2025(15),
            },
        }),
        // –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥–ª—è –ê–ª–∏–µ–≤–∞
        prisma.teacherAchievement.create({
            data: {
                teacherId: teachers[1].teacher.id,
                type: 'PROJECT_HELP',
                title: '“í—ã–ª—ã–º–∏ –∂–æ–±–∞“ì–∞ –∫”©–º–µ–∫',
                description: '–ë–∏–æ–ª–æ–≥–∏—è –±–æ–π—ã–Ω—à–∞ “ì—ã–ª—ã–º–∏ –∂–æ–±–∞–Ω—ã –¥–∞–π—ã–Ω–¥–∞—É–¥–∞ —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–≥–µ –∫”©–º–µ–∫—Ç–µ—Å—Ç—ñ',
                date: getDateInAugust2025(20),
                points: 25,
                isVerified: true,
                verifiedAt: getDateInAugust2025(25),
            },
        }),
    ]);

    console.log('ü•á KPI “Ø—à—ñ–Ω –æ–ª–∏–º–ø–∏–∞–¥–∞ –Ω”ô—Ç–∏–∂–µ–ª–µ—Ä—ñ–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥ (–≤–ª–∏—è—é—Ç –Ω–∞ KPI –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)
    await Promise.all([
        prisma.olympiadResult.create({
            data: {
                studentId: studentUsers[0].student.id, // –ê–π–¥–∞
                teacherId: teachers[0].teacher.id, // –ò–≤–∞–Ω–æ–≤–∞
                olympiadName: '“ö–∞–ª–∞–ª—ã“õ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –æ–ª–∏–º–ø–∏–∞–¥–∞—Å—ã',
                subject: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
                level: '“ö–∞–ª–∞–ª—ã“õ',
                place: 1,
                date: getDateInAugust2025(1),
            },
        }),
        prisma.olympiadResult.create({
            data: {
                studentId: studentUsers[1].student.id, // –ê—Ä–º–∞–Ω
                teacherId: teachers[0].teacher.id, // –ò–≤–∞–Ω–æ–≤–∞
                olympiadName: '–ú–µ–∫—Ç–µ–ø—ñ—à—ñ–ª—ñ–∫ –∞–ª–≥–µ–±—Ä–∞ –æ–ª–∏–º–ø–∏–∞–¥–∞—Å—ã',
                subject: '–ê–ª–≥–µ–±—Ä–∞',
                level: '–ú–µ–∫—Ç–µ–ø—ñ—à—ñ–ª—ñ–∫',
                place: 2,
                date: getDateInAugust2025(15),
            },
        }),
        prisma.olympiadResult.create({
            data: {
                studentId: studentUsers[2].student.id, // –î–∞–Ω–∞
                teacherId: teachers[1].teacher.id, // –ê–ª–∏–µ–≤
                olympiadName: '”®“£—ñ—Ä–ª—ñ–∫ –±–∏–æ–ª–æ–≥–∏—è –æ–ª–∏–º–ø–∏–∞–¥–∞—Å—ã',
                subject: '–ë–∏–æ–ª–æ–≥–∏—è',
                level: '”®“£—ñ—Ä–ª—ñ–∫',
                place: 3,
                date: getDateInAugust2025(10),
            },
        }),
    ]);

    console.log('üéì KPI “Ø—à—ñ–Ω —Å—Ç—É–¥–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ —Ç“Ø—Å—É –∂–∞–∑–±–∞–ª–∞—Ä—ã–Ω “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è—Ö (–≤–ª–∏—è—é—Ç –Ω–∞ KPI –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π)
    await Promise.all([
        prisma.studentAdmission.create({
            data: {
                studentId: studentUsers[3].student.id, // –ë–µ–∫–∑–∞—Ç (11 –∫–ª–∞—Å—Å)
                teacherId: teachers[2].teacher.id, // –¢—É–ª–µ–≥–µ–Ω–æ–≤ (—Ñ–∏–∑–∏–∫–∞)
                schoolType: 'RFMSH',
                schoolName: '–†–µ—Å–ø—É–±–ª–∏–∫–∞–ª—ã“õ —Ñ–∏–∑–∏–∫–∞-–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ –º–µ–∫—Ç–µ–±—ñ',
                admissionYear: 2025,
            },
        }),
    ]);

    console.log('üìã –ö–¢–ü (–∫“Ø–Ω—Ç—ñ–∑–±–µ–ª—ñ–∫-—Ç–∞“õ—ã—Ä—ã–ø—Ç—ã“õ –∂–æ—Å–ø–∞—Ä) “õ“±—Ä–∞–º—ã–∑...');

    // –°–æ–∑–¥–∞–µ–º –ö–¢–ü –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—á–µ–±–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
    await Promise.all([
        // –ö–¢–ü –¥–ª—è –∞–ª–≥–µ–±—Ä—ã 10 –∫–ª–∞—Å—Å (–ò–≤–∞–Ω–æ–≤–∞)
        prisma.curriculumPlan.create({
            data: {
                studyPlanId: studyPlans[0].id, // –ê–ª–≥–µ–±—Ä–∞ 10 –∫–ª–∞—Å—Å
                totalLessons: 25,
                plannedLessons: [
                    {
                        id: 'section_1',
                        title: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä –∂”ô–Ω–µ —Ç–µ“£—Å—ñ–∑–¥—ñ–∫—Ç–µ—Ä',
                        description: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä–¥—ñ —à–µ—à—É ”ô–¥—ñ—Å—Ç–µ—Ä—ñ–Ω –æ“õ—É',
                        order: 1,
                        topics: [
                            {
                                id: 'topic_1_1',
                                title: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä',
                                description: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä–¥—ñ ”ô—Ä—Ç“Ø—Ä–ª—ñ —Ç”ô—Å—ñ–ª–¥–µ—Ä–º–µ–Ω —à–µ—à—É',
                                hours: 4,
                                order: 1,
                                completed: true,
                                completedAt: '2025-07-05T00:00:00Z'
                            },
                            {
                                id: 'topic_1_2',
                                title: '“ö—ã—Å“õ–∞—à–∞ –∫”©–±–µ–π—Ç—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã',
                                description: '–ï—Å–µ–ø—Ç–µ—Ä–¥—ñ —à–µ—à—É–¥–µ “õ—ã—Å“õ–∞—à–∞ –∫”©–±–µ–π—Ç—É —Ñ–æ—Ä–º—É–ª–∞–ª–∞—Ä—ã–Ω “õ–æ–ª–¥–∞–Ω—É',
                                hours: 3,
                                order: 2,
                                completed: true,
                                completedAt: '2025-07-12T00:00:00Z'
                            },
                            {
                                id: 'topic_1_3',
                                title: '–í–∏–µ—Ç —Ç–µ–æ—Ä–µ–º–∞—Å—ã',
                                description: '–í–∏–µ—Ç —Ç–µ–æ—Ä–µ–º–∞—Å—ã–Ω –æ“õ—É –∂”ô–Ω–µ “õ–æ–ª–¥–∞–Ω—É',
                                hours: 2,
                                order: 3,
                                completed: true,
                                completedAt: '2025-07-19T00:00:00Z'
                            },
                            {
                                id: 'topic_1_4',
                                title: '–ë–∞“õ—ã–ª–∞—É –∂“±–º—ã—Å—ã ‚Ññ1',
                                description: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä –±–æ–π—ã–Ω—à–∞ –±—ñ–ª—ñ–º–¥—ñ —Ç–µ–∫—Å–µ—Ä—É',
                                hours: 1,
                                order: 4,
                                completed: true,
                                completedAt: '2025-07-26T00:00:00Z'
                            }
                        ]
                    },
                    {
                        id: 'section_2',
                        title: '–¢–µ“£–¥–µ—É–ª–µ—Ä –∂“Ø–π–µ–ª–µ—Ä—ñ',
                        description: '–¢–µ“£–¥–µ—É–ª–µ—Ä –∂“Ø–π–µ—Å—ñ–Ω —à–µ—à—É ”ô–¥—ñ—Å—Ç–µ—Ä—ñ',
                        order: 2,
                        topics: [
                            {
                                id: 'topic_2_1',
                                title: '–°—ã–∑—ã“õ—Ç—ã“õ —Ç–µ“£–¥–µ—É–ª–µ—Ä –∂“Ø–π–µ–ª–µ—Ä—ñ',
                                description: '–°—ã–∑—ã“õ—Ç—ã“õ —Ç–µ“£–¥–µ—É–ª–µ—Ä –∂“Ø–π–µ—Å—ñ–Ω —à–µ—à—É',
                                hours: 3,
                                order: 1,
                                completed: true,
                                completedAt: '2025-08-02T00:00:00Z'
                            },
                            {
                                id: 'topic_2_2',
                                title: '–ö–≤–∞–¥—Ä–∞—Ç —Ç–µ“£–¥–µ—É–ª–µ—Ä—ñ –±–∞—Ä –∂“Ø–π–µ–ª–µ—Ä',
                                description: '–ê—Ä–∞–ª–∞—Å —Ç–µ“£–¥–µ—É–ª–µ—Ä –∂“Ø–π–µ—Å—ñ–Ω —à–µ—à—É',
                                hours: 4,
                                order: 2,
                                completed: true,
                                completedAt: '2025-08-09T00:00:00Z'
                            }
                        ]
                    },
                    {
                        id: 'section_3',
                        title: '–§—É–Ω–∫—Ü–∏—è–ª–∞—Ä –∂”ô–Ω–µ –≥—Ä–∞—Ñ–∏–∫—Ç–µ—Ä',
                        description: '”ò—Ä—Ç“Ø—Ä–ª—ñ —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä –∂”ô–Ω–µ –æ–ª–∞—Ä–¥—ã“£ –≥—Ä–∞—Ñ–∏–∫—Ç–µ—Ä—ñ–Ω –æ“õ—É',
                        order: 3,
                        topics: [
                            {
                                id: 'topic_3_1',
                                title: '–°—ã–∑—ã“õ—Ç—ã“õ —Ñ—É–Ω–∫—Ü–∏—è',
                                description: '–°—ã–∑—ã“õ—Ç—ã“õ —Ñ—É–Ω–∫—Ü–∏—è “õ–∞—Å–∏–µ—Ç—Ç–µ—Ä—ñ –∂”ô–Ω–µ –≥—Ä–∞—Ñ–∏–≥—ñ–Ω —Å–∞–ª—É',
                                hours: 2,
                                order: 1,
                                completed: true,
                                completedAt: '2025-09-06T00:00:00Z'
                            },
                            {
                                id: 'topic_3_2',
                                title: '–ö–≤–∞–¥—Ä–∞—Ç —Ñ—É–Ω–∫—Ü–∏—è—Å—ã',
                                description: '–ö–≤–∞–¥—Ä–∞—Ç —Ñ—É–Ω–∫—Ü–∏—è—Å—ã–Ω –∂”ô–Ω–µ –ø–∞—Ä–∞–±–æ–ª–∞–Ω—ã –æ“õ—É',
                                hours: 3,
                                order: 2,
                                completed: true,
                                completedAt: '2025-09-13T00:00:00Z'
                            },
                            {
                                id: 'topic_3_3',
                                title: '–§—É–Ω–∫—Ü–∏—è–ª–∞—Ä –ø—Ä–∞–∫—Ç–∏–∫—É–º—ã',
                                description: '–§—É–Ω–∫—Ü–∏—è–ª–∞—Ä –±–æ–π—ã–Ω—à–∞ –µ—Å–µ–ø—Ç–µ—Ä —à–µ—à—É',
                                hours: 2,
                                order: 3,
                                completed: false // –ï—â–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                            }
                        ]
                    }
                ]
            },
        }),
        
        // –ö–¢–ü –¥–ª—è –±–∏–æ–ª–æ–≥–∏–∏ 10 –∫–ª–∞—Å—Å (–ê–ª–∏–µ–≤)
        prisma.curriculumPlan.create({
            data: {
                studyPlanId: studyPlans[1].id, // –ë–∏–æ–ª–æ–≥–∏—è 10 –∫–ª–∞—Å—Å
                totalLessons: 14,
                plannedLessons: [
                    {
                        id: 'section_bio_1',
                        title: '–¶–∏—Ç–æ–ª–æ–≥–∏—è –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ',
                        description: '–ñ–∞—Å—É—à–∞ “õ“±—Ä—ã–ª—ã—Å—ã –º–µ–Ω —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä—ã–Ω –æ“õ—É',
                        order: 1,
                        topics: [
                            {
                                id: 'topic_bio_1_1',
                                title: '–ñ–∞—Å—É—à–∞ “õ“±—Ä—ã–ª—ã—Å—ã',
                                description: '–ñ–∞—Å—É—à–∞ –æ—Ä–≥–∞–Ω–æ–∏–¥—Ç–∞—Ä—ã –∂”ô–Ω–µ –æ–ª–∞—Ä–¥—ã“£ —Ñ—É–Ω–∫—Ü–∏—è–ª–∞—Ä—ã',
                                hours: 3,
                                order: 1,
                                completed: true,
                                completedAt: '2025-07-08T00:00:00Z'
                            },
                            {
                                id: 'topic_bio_1_2',
                                title: '–§–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑',
                                description: '”®—Å—ñ–º–¥—ñ–∫—Ç–µ—Ä–¥–µ–≥—ñ —Ñ–æ—Ç–æ—Å–∏–Ω—Ç–µ–∑ –ø—Ä–æ—Ü–µ—Å—ñ',
                                hours: 2,
                                order: 2,
                                completed: true,
                                completedAt: '2025-07-15T00:00:00Z'
                            },
                            {
                                id: 'topic_bio_1_3',
                                title: '”®—Å—ñ–º–¥—ñ–∫—Ç–µ—Ä–¥—ñ“£ —Ç—ã–Ω—ã—Å –∞–ª—É—ã',
                                description: '–ñ–∞—Å—É—à–∞–ª—ã“õ —Ç—ã–Ω—ã—Å –∞–ª—É –ø—Ä–æ—Ü–µ—Å—Ç–µ—Ä—ñ',
                                hours: 2,
                                order: 3,
                                completed: true,
                                completedAt: '2025-08-05T00:00:00Z'
                            }
                        ]
                    },
                    {
                        id: 'section_bio_2',
                        title: '–ì–µ–Ω–µ—Ç–∏–∫–∞',
                        description: '–¢“±“õ—ã–º“õ—É–∞–ª–∞—É—à—ã–ª—ã“õ –ø–µ–Ω ”©–∑–≥–µ—Ä–≥—ñ—à—Ç—ñ–∫ –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ',
                        order: 2,
                        topics: [
                            {
                                id: 'topic_bio_2_1',
                                title: '–ú–µ–Ω–¥–µ–ª—å –∑–∞“£–¥–∞—Ä—ã',
                                description: '–¢“±“õ—ã–º“õ—É–∞–ª–∞—É—à—ã–ª—ã“õ—Ç—ã“£ –Ω–µ–≥—ñ–∑–≥—ñ –∑–∞“£–¥–∞—Ä—ã',
                                hours: 4,
                                order: 1,
                                completed: true,
                                completedAt: '2025-08-12T00:00:00Z'
                            },
                            {
                                id: 'topic_bio_2_2',
                                title: '–ì–µ–Ω–µ—Ç–∏–∫–∞–ª—ã“õ –µ—Å–µ–ø—Ç–µ—Ä —à—ã“ì–∞—Ä—É',
                                description: '–ì–µ–Ω–µ—Ç–∏–∫–∞ –∑–∞“£–¥–∞—Ä—ã–Ω –ø—Ä–∞–∫—Ç–∏–∫–∞–ª—ã“õ “õ–æ–ª–¥–∞–Ω—É',
                                hours: 3,
                                order: 2,
                                completed: true,
                                completedAt: '2025-09-02T00:00:00Z'
                            }
                        ]
                    }
                ]
            },
        }),
        
        // –ö–¢–ü –¥–ª—è —Ñ–∏–∑–∏–∫–∏ 11 –∫–ª–∞—Å—Å (–¢—É–ª–µ–≥–µ–Ω–æ–≤) - —á–∞—Å—Ç–∏—á–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω
        prisma.curriculumPlan.create({
            data: {
                studyPlanId: studyPlans[2].id, // –§–∏–∑–∏–∫–∞ 11 –∫–ª–∞—Å—Å
                totalLessons: 10,
                plannedLessons: [
                    {
                        id: 'section_phys_1',
                        title: '–ú–æ–ª–µ–∫—É–ª–∞–ª—ã“õ-–∫–∏–Ω–µ—Ç–∏–∫–∞–ª—ã“õ —Ç–µ–æ—Ä–∏—è',
                        description: '–ú–ö–¢ –Ω–µ–≥—ñ–∑–¥–µ—Ä—ñ –∂”ô–Ω–µ –≥–∞–∑ –∑–∞“£–¥–∞—Ä—ã',
                        order: 1,
                        topics: [
                            {
                                id: 'topic_phys_1_1',
                                title: '–ú–ö–¢ –Ω–µ–≥—ñ–∑–≥—ñ “õ–∞“ì–∏–¥–∞–ª–∞—Ä—ã',
                                description: '–ì–∞–∑–¥–∞—Ä–¥—ã“£ –º–æ–ª–µ–∫—É–ª–∞–ª—ã“õ-–∫–∏–Ω–µ—Ç–∏–∫–∞–ª—ã“õ —Ç–µ–æ—Ä–∏—è—Å—ã',
                                hours: 3,
                                order: 1,
                                completed: true,
                                completedAt: '2025-07-10T00:00:00Z'
                            },
                            {
                                id: 'topic_phys_1_2',
                                title: '–ì–∞–∑ –∑–∞“£–¥–∞—Ä—ã',
                                description: '–ò–¥–µ–∞–ª –≥–∞–∑ –∑–∞“£–¥–∞—Ä—ã–Ω –æ“õ—É',
                                hours: 4,
                                order: 2,
                                completed: true,
                                completedAt: '2025-07-17T00:00:00Z'
                            },
                            {
                                id: 'topic_phys_1_3',
                                title: '–¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞',
                                description: '–¢–µ—Ä–º–æ–¥–∏–Ω–∞–º–∏–∫–∞–Ω—ã“£ –±—ñ—Ä—ñ–Ω—à—ñ –∂”ô–Ω–µ –µ–∫—ñ–Ω—à—ñ –∑–∞“£–¥–∞—Ä—ã',
                                hours: 3,
                                order: 3,
                                completed: false // –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                            }
                        ]
                    },
                    {
                        id: 'section_phys_2',
                        title: '–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞—Ç–∏–∫–∞',
                        description: '–≠–ª–µ–∫—Ç—Ä ”©—Ä—ñ—Å—ñ –∂”ô–Ω–µ –æ–Ω—ã“£ “õ–∞—Å–∏–µ—Ç—Ç–µ—Ä—ñ',
                        order: 2,
                        topics: [
                            {
                                id: 'topic_phys_2_1',
                                title: '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ',
                                description: '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—è',
                                hours: 4,
                                order: 1,
                                completed: false // –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                            }
                        ]
                    }
                ]
            },
        }),
        
        // –ö–¢–ü –¥–ª—è —Ö–∏–º–∏–∏ 9 –∫–ª–∞—Å—Å (–ù–∞–∑–∞—Ä–±–∞–µ–≤–∞) - –ø–ª–æ—Ö–æ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
        prisma.curriculumPlan.create({
            data: {
                studyPlanId: studyPlans[3].id, // –•–∏–º–∏—è 9 –∫–ª–∞—Å—Å
                totalLessons: 9,
                plannedLessons: [
                    {
                        id: 'section_chem_1',
                        title: '–≠–ª–µ–º–µ–Ω—Ç—Ç–µ—Ä–¥—ñ“£ –ø–µ—Ä–∏–æ–¥—Ç—ã“õ –∂“Ø–π–µ—Å—ñ',
                        description: '–ü–µ—Ä–∏–æ–¥—Ç—ã“õ –∑–∞“£–¥—ã –æ“õ—É',
                        order: 1,
                        topics: [
                            {
                                id: 'topic_chem_1_1',
                                title: '–ü–µ—Ä–∏–æ–¥—Ç—ã“õ –∑–∞“£',
                                description: '–ú–µ–Ω–¥–µ–ª–µ–µ–≤—Ç—ñ“£ –ø–µ—Ä–∏–æ–¥—Ç—ã“õ –∑–∞“£—ã',
                                hours: 2,
                                order: 1,
                                completed: true,
                                completedAt: '2025-07-11T00:00:00Z'
                            },
                            {
                                id: 'topic_chem_1_2',
                                title: '–•–∏–º–∏—è–ª—ã“õ –±–∞–π–ª–∞–Ω—ã—Å—Ç–∞—Ä',
                                description: '–•–∏–º–∏—è–ª—ã“õ –±–∞–π–ª–∞–Ω—ã—Å —Ç“Ø—Ä–ª–µ—Ä—ñ',
                                hours: 3,
                                order: 2,
                                completed: false // –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                            }
                        ]
                    },
                    {
                        id: 'section_chem_2',
                        title: '–•–∏–º–∏—è–ª—ã“õ —Ä–µ–∞–∫—Ü–∏—è–ª–∞—Ä',
                        description: '–•–∏–º–∏—è–ª—ã“õ —Ä–µ–∞–∫—Ü–∏—è —Ç“Ø—Ä–ª–µ—Ä—ñ',
                        order: 2,
                        topics: [
                            {
                                id: 'topic_chem_2_1',
                                title: '“ö—ã—à“õ—ã–ª–¥–∞—Ä –∂”ô–Ω–µ –Ω–µ–≥—ñ–∑–¥–µ—Ä',
                                description: '“ö—ã—à“õ—ã–ª–¥–∞—Ä –º–µ–Ω –Ω–µ–≥—ñ–∑–¥–µ—Ä–¥—ñ“£ “õ–∞—Å–∏–µ—Ç—Ç–µ—Ä—ñ',
                                hours: 4,
                                order: 1,
                                completed: false // –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                            },
                            {
                                id: 'topic_chem_2_2',
                                title: '–¢–¢–†',
                                description: '–¢–æ—Ç—ã“ì—É-—Ç–æ—Ç—ã“õ—Å—ã–∑–¥–∞–Ω—É —Ä–µ–∞–∫—Ü–∏—è–ª–∞—Ä—ã',
                                hours: 3,
                                order: 2,
                                completed: false // –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                            }
                        ]
                    }
                ]
            },
        })
    ]);

    console.log('‚úÖ –î–µ—Ä–µ–∫—Ç–µ—Ä “õ–æ—Ä—ã —Å”ô—Ç—Ç—ñ —Ç–æ–ª—Ç—ã—Ä—ã–ª–¥—ã!');
    console.log('\nüìä “ö“±—Ä–∞—Å—Ç—ã—Ä—ã–ª“ì–∞–Ω—ã:');
    console.log(`üë§ –ü–∞–π–¥–∞–ª–∞–Ω—É—à—ã–ª–∞—Ä: ${2 + teachers.length + studentUsers.length + parents.length}`); // admin + financist + teachers + students + parents
    console.log(`üë• –¢–æ–ø—Ç–∞—Ä: ${groups.length}`);
    console.log(`üè´ –ê—É–¥–∏—Ç–æ—Ä–∏—è–ª–∞—Ä: ${classrooms.length}`);
    console.log(`üìö –û“õ—É –∂–æ—Å–ø–∞—Ä–ª–∞—Ä—ã: ${studyPlans.length}`);
    console.log(`üìñ –°–∞–±–∞“õ—Ç–∞—Ä: ${lessons.length}`);
    console.log('\nüîë –¢–µ—Å—Ç—Ç—ñ–∫ –∞–∫–∫–∞—É–Ω—Ç—Ç–∞—Ä:');
    console.log(`üë®‚Äçüíº ”ò–∫—ñ–º—à—ñ: ${admin.email} / password123`);
    console.log(`üí∞ “ö–∞—Ä–∂—ã –º–∞–º–∞–Ω—ã: ${financist.email} / password123`);
    console.log('üë®‚Äçüè´ –û“õ—ã—Ç—É—à—ã: ivanova@abai.edu.kz / password123');
    console.log('üéì –°—Ç—É–¥–µ–Ω—Ç: aida.student@abai.edu.kz / password123');
    console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –ê—Ç–∞-–∞–Ω–∞–ª–∞—Ä:');
    console.log('  üë© –ù–∞–∑—ã–º “ö–∞–∑—ã–±–µ–∫–æ–≤–∞: nazym.parent@abai.edu.kz / password123 (–ê–π–¥–∞–Ω—ã“£ –∞–Ω–∞—Å—ã)');
    console.log('  üë® –ù“±—Ä–ª–∞–Ω “ö–∞–∑—ã–±–µ–∫–æ–≤: nurlan.parent@abai.edu.kz / password123 (–ê–π–¥–∞–Ω—ã“£ ”ô–∫–µ—Å—ñ)');
    console.log('  üë® –ë–æ–ª–∞—Ç –ñ–∞“õ—ã–ø–æ–≤: bolat.parent@abai.edu.kz / password123 (–ê—Ä–º–∞–Ω–Ω—ã“£ ”ô–∫–µ—Å—ñ)');
    console.log('  üë© –ì“Ø–ª–Ω–∞—Ä–∞ –ñ–∞“õ—ã–ø–æ–≤–∞: gulnara.parent@abai.edu.kz / password123 (–ê—Ä–º–∞–Ω–Ω—ã“£ –∞–Ω–∞—Å—ã)');
    console.log('  üë® –ê—Å—ã–ª–±–µ–∫ –°–µ—Ä–∞–ª–∏–µ–≤: asylbek.parent@abai.edu.kz / password123 (–î–∞–Ω–∞–Ω—ã“£ ”ô–∫–µ—Å—ñ)');
    console.log('  üë© –ñ–∞–Ω–∞—Ä –°–µ—Ä–∞–ª–∏–µ–≤–∞: zhanar.parent@abai.edu.kz / password123 (–î–∞–Ω–∞–Ω—ã“£ –∞–Ω–∞—Å—ã)');
    console.log('  üë® –ê–ª–º–∞—Å –û—Ä–∞–∑–±–∞–µ–≤: almas.parent@abai.edu.kz / password123 (–ë–µ–∫–∑–∞—Ç—Ç—ã“£ ”ô–∫–µ—Å—ñ)');
}

main()
    .then(async () => {
        await prisma.$disconnect();
    })
    .catch(async (e) => {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', e);
        await prisma.$disconnect();
        process.exit(1);
    });
