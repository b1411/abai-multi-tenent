import { PrismaClient } from '../generated/prisma';
import { KpiService } from '../src/kpi/kpi.service';
import { FeedbackAggregationService } from '../src/kpi/feedback-aggregation.service';

const prisma = new PrismaClient();

async function testKpiCalculation() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–ª—å–∫—É–ª—è—Ü–∏–∏ KPI...\n');

  const feedbackAggregationService = new FeedbackAggregationService(prisma);
  const kpiService = new KpiService(prisma, feedbackAggregationService);

  try {
    // 1. –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    console.log('üìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π...');
    const teachers = await prisma.teacher.findMany({
      take: 5, // –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞ –ø–µ—Ä–≤—ã—Ö 5 –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è—Ö
      include: {
        user: true
      }
    });

    console.log(`–ù–∞–π–¥–µ–Ω–æ ${teachers.length} –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n`);

    for (const teacher of teachers) {
      console.log(`\nüéì –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ KPI –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: ${teacher.user.name} (ID: ${teacher.id})`);
      console.log('=' .repeat(80));

      // 2. –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∏–¥–±–µ–∫–∏
      await createTestFeedbacks(teacher.id);

      // 3. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å KPI —á–µ—Ä–µ–∑ —Ä–∞–∑–Ω—ã–µ –º–µ—Ç–æ–¥—ã
      await testDifferentKpiMethods(teacher.id, kpiService, feedbackAggregationService);

      // 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–ª–∏—è–Ω–∏–µ —Ñ–∏–¥–±–µ–∫–æ–≤ –Ω–∞ KPI
      await testFeedbackImpact(teacher.id, kpiService);

      console.log('\n' + '='.repeat(80));
    }

    // 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    await testOverallStatistics(feedbackAggregationService);

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–ª—å–∫—É–ª—è—Ü–∏–∏ KPI –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

async function createTestFeedbacks(teacherId: number) {
  console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤...');

  // –ü–æ–ª—É—á–∏—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  const students = await prisma.student.findMany({
    where: {
      group: {
        lessons: {
          some: {
            teacherId: teacherId
          }
        }
      }
    },
    take: 3, // –ë–µ—Ä–µ–º 3 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
    include: { user: true }
  });

  const template = await prisma.feedbackTemplate.findFirst({
    where: {
      name: 'student_retention_comprehensive',
      isActive: true
    }
  });

  if (!template) {
    console.log('‚ö†Ô∏è –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ñ–∏–¥–±–µ–∫–æ–≤');
    return;
  }

  // –°–æ–∑–¥–∞—Ç—å —Ñ–∏–¥–±–µ–∫–∏ –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
  for (const student of students) {
    const testAnswers = {
      satisfaction_overall: Math.floor(Math.random() * 5) + 1, // 1-5
      continue_studying: Math.random() > 0.2, // 80% —Ö–æ—Ç—è—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
      recommend_school: Math.floor(Math.random() * 5) + 1, // 1-5
      teacher_effectiveness: {
        [teacherId]: Math.floor(Math.random() * 5) + 1 // –û—Ü–µ–Ω–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
      },
      mood_today: Math.floor(Math.random() * 100), // 0-100
      concentration_level: Math.floor(Math.random() * 100),
      motivation_level: Math.floor(Math.random() * 100),
      socialization_level: Math.floor(Math.random() * 100)
    };

    await prisma.feedbackResponse.create({
      data: {
        userId: student.user.id,
        templateId: template.id,
        answers: testAnswers,
        isCompleted: true,
        submittedAt: new Date(),
        period: '2025-01',
        aboutTeacherId: teacherId
      }
    });

    console.log(`  ‚úì –°–æ–∑–¥–∞–Ω —Ñ–∏–¥–±–µ–∫ –æ—Ç —Å—Ç—É–¥–µ–Ω—Ç–∞ ${student.user.name}`);
  }

  // –°–æ–∑–¥–∞—Ç—å —Ñ–∏–¥–±–µ–∫–∏ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π
  const parentTemplate = await prisma.feedbackTemplate.findFirst({
    where: {
      name: 'parent_comprehensive_evaluation',
      isActive: true
    }
  });

  if (parentTemplate) {
    for (const student of students.slice(0, 2)) { // 2 —Ä–æ–¥–∏—Ç–µ–ª—è
      // –ù–∞–π—Ç–∏ —Ä–æ–¥–∏—Ç–µ–ª—è
      const parent = await prisma.parent.findFirst({
        where: { studentId: student.id },
        include: { user: true }
      });

      if (parent) {
        const parentAnswers = {
          academic_progress: Math.floor(Math.random() * 5) + 1,
          teacher_interaction: Math.floor(Math.random() * 5) + 1,
          education_quality: Math.floor(Math.random() * 5) + 1,
          administration_communication: Math.floor(Math.random() * 5) + 1,
          overall_satisfaction: Math.floor(Math.random() * 5) + 1,
          nps_score: Math.floor(Math.random() * 11), // 0-10
          teacher_rating: {
            [teacherId]: Math.floor(Math.random() * 5) + 1
          }
        };

        await prisma.feedbackResponse.create({
          data: {
            userId: parent.user.id,
            templateId: parentTemplate.id,
            answers: parentAnswers,
            isCompleted: true,
            submittedAt: new Date(),
            period: '2025-01',
            aboutTeacherId: teacherId
          }
        });

        console.log(`  ‚úì –°–æ–∑–¥–∞–Ω —Ñ–∏–¥–±–µ–∫ –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ ${student.user.name}`);
      }
    }
  }
}

async function testDifferentKpiMethods(teacherId: number, kpiService: KpiService, feedbackService: FeedbackAggregationService) {
  console.log('\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —Ä–∞—Å—á–µ—Ç–∞ KPI...');

  // 1. –î–µ—Ç–∞–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
  try {
    const teacherDetails = await kpiService.getTeacherKpiDetails(teacherId);
    console.log(`üìä –î–µ—Ç–∞–ª–∏ KPI –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è:`);
    console.log(`   –û–±—â–∏–π –±–∞–ª–ª: ${teacherDetails.overallScore}`);
    console.log(`   –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è: ${teacherDetails.metrics.teachingQuality.value}`);
    console.log(`   –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏: ${teacherDetails.metrics.workloadCompliance.value}`);
    console.log(`   –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∂—É—Ä–Ω–∞–ª–∞: ${teacherDetails.metrics.classAttendance.value}`);
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π KPI: ${error.message}`);
  }

  // 2. KPI —Å —É—á–µ—Ç–æ–º —Ñ–∏–¥–±–µ–∫–æ–≤
  try {
    const kpiFromFeedbacks = await feedbackService.calculateTeacherKPIFromFeedback(teacherId, '2025-01');
    console.log(`üìà KPI –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–∏–¥–±–µ–∫–æ–≤:`);
    console.log(`   –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${kpiFromFeedbacks.studentSatisfaction}`);
    console.log(`   –£–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${kpiFromFeedbacks.studentRetention}`);
    console.log(`   –û—Ç–∑—ã–≤—ã —Ä–æ–¥–∏—Ç–µ–ª–µ–π: ${kpiFromFeedbacks.parentFeedback}`);
    console.log(`   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–¥–±–µ–∫–æ–≤: ${kpiFromFeedbacks.feedbackCount}`);
    console.log(`   –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: ${kpiFromFeedbacks.averageRating}`);
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ KPI —Å —Ñ–∏–¥–±–µ–∫–∞–º–∏: ${error.message}`);
  }

  // 3. –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∏–¥–±–µ–∫–æ–≤
  try {
    const retentionData = await feedbackService.aggregateStudentRetentionKpi(teacherId);
    const parentData = await feedbackService.aggregateParentFeedbackKpi(teacherId);
    const evaluationData = await feedbackService.aggregateTeacherEvaluationFromStudents(teacherId);
    
    console.log(`üìã –ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ñ–∏–¥–±–µ–∫–æ–≤:`);
    console.log(`   –£–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${retentionData.score} (${retentionData.responseCount} –æ—Ç–≤–µ—Ç–æ–≤, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${retentionData.confidence})`);
    console.log(`   –û—Ç–∑—ã–≤—ã —Ä–æ–¥–∏—Ç–µ–ª–µ–π: ${parentData.score} (${parentData.responseCount} –æ—Ç–≤–µ—Ç–æ–≤, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${parentData.confidence})`);
    console.log(`   –û—Ü–µ–Ω–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${evaluationData.score} (${evaluationData.responseCount} –æ—Ç–≤–µ—Ç–æ–≤, —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${evaluationData.confidence})`);
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏: ${error.message}`);
  }
}

async function testFeedbackImpact(teacherId: number, kpiService: KpiService) {
  console.log('\nüí° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–ª–∏—è–Ω–∏—è —Ñ–∏–¥–±–µ–∫–æ–≤ –Ω–∞ KPI...');

  try {
    // KPI –¥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ñ–∏–¥–±–µ–∫–∞
    const kpiBefore = await kpiService.getTeacherKpiDetails(teacherId);
    console.log(`üìâ KPI –¥–æ: ${kpiBefore.overallScore}`);

    // –î–æ–±–∞–≤–∏—Ç—å –æ—á–µ–Ω—å –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π —Ñ–∏–¥–±–µ–∫
    const student = await prisma.student.findFirst({
      include: { user: true }
    });

    const template = await prisma.feedbackTemplate.findFirst({
      where: { name: 'student_retention_comprehensive' }
    });

    if (student && template) {
      await prisma.feedbackResponse.create({
        data: {
          userId: student.user.id,
          templateId: template.id,
          answers: {
            satisfaction_overall: 5, // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
            continue_studying: true,
            recommend_school: 5,
            teacher_effectiveness: { [teacherId]: 5 },
            mood_today: 95,
            concentration_level: 90,
            motivation_level: 95,
            socialization_level: 85
          },
          isCompleted: true,
          submittedAt: new Date(),
          period: '2025-01',
          aboutTeacherId: teacherId
        }
      });

      // KPI –ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ —Ñ–∏–¥–±–µ–∫–∞
      const kpiAfter = await kpiService.getTeacherKpiDetails(teacherId);
      console.log(`üìà KPI –ø–æ—Å–ª–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ —Ñ–∏–¥–±–µ–∫–∞: ${kpiAfter.overallScore}`);
      console.log(`üìä –ò–∑–º–µ–Ω–µ–Ω–∏–µ: ${(kpiAfter.overallScore - kpiBefore.overallScore)}`);
    }
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–ª–∏—è–Ω–∏—è: ${error.message}`);
  }
}

async function testOverallStatistics(feedbackService: FeedbackAggregationService) {
  console.log('\nüìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');

  try {
    // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–≥—Ä–µ–≥–∞—Ü–∏–∏ —Ñ–∏–¥–±–µ–∫–æ–≤
    const aggregationStats = await feedbackService.getFeedbackAggregationStats();
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∏–¥–±–µ–∫-–∞–≥—Ä–µ–≥–∞—Ü–∏–∏:`);
    console.log(`   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–¥–±–µ–∫–æ–≤: ${aggregationStats.totalFeedbacks}`);
    console.log(`   KPI-—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤: ${aggregationStats.kpiRelevantFeedbacks}`);
    console.log(`   –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π —Å —Ñ–∏–¥–±–µ–∫–∞–º–∏: ${aggregationStats.teachersWithFeedbacks}`);
    console.log(`   –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç–≤–µ—Ç–æ–≤: ${aggregationStats.averageResponseRate}%`);
    
    console.log(`   –ü–æ–∫—Ä—ã—Ç–∏–µ –º–µ—Ç—Ä–∏–∫:`);
    Object.entries(aggregationStats.metricsCoverage).forEach(([metric, count]) => {
      console.log(`     ${metric}: ${count} —Ñ–∏–¥–±–µ–∫–æ–≤`);
    });

  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –æ–±—â–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ${error.message}`);
  }
}

function testKpiWeights() {
  console.log('\n‚öñÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ—Å–æ–≤—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ KPI...');

  const testScores = {
    studentSatisfaction: 85,
    parentSatisfaction: 78,
    retentionIndex: 92,
    emotionalWellbeing: 76,
    teachingQuality: 88
  };

  const weights = {
    studentSatisfaction: 0.30,
    parentSatisfaction: 0.25,
    retentionIndex: 0.20,
    emotionalWellbeing: 0.15,
    teachingQuality: 0.10
  };

  const totalKpi = 
    (testScores.studentSatisfaction * weights.studentSatisfaction) +
    (testScores.parentSatisfaction * weights.parentSatisfaction) +
    (testScores.retentionIndex * weights.retentionIndex) +
    (testScores.emotionalWellbeing * weights.emotionalWellbeing) +
    (testScores.teachingQuality * weights.teachingQuality);

  console.log('üìä –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:');
  console.log(`   –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: ${testScores.studentSatisfaction} (–≤–µ—Å: ${weights.studentSatisfaction})`);
  console.log(`   –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª–µ–π: ${testScores.parentSatisfaction} (–≤–µ—Å: ${weights.parentSatisfaction})`);
  console.log(`   –ò–Ω–¥–µ–∫—Å —É–¥–µ—Ä–∂–∞–Ω–∏—è: ${testScores.retentionIndex} (–≤–µ—Å: ${weights.retentionIndex})`);
  console.log(`   –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ: ${testScores.emotionalWellbeing} (–≤–µ—Å: ${weights.emotionalWellbeing})`);
  console.log(`   –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è: ${testScores.teachingQuality} (–≤–µ—Å: ${weights.teachingQuality})`);
  console.log(`\nüéØ –ò—Ç–æ–≥–æ–≤—ã–π KPI: ${totalKpi.toFixed(2)}`);
}

async function cleanupTestData() {
  console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –£–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∏–¥–±–µ–∫–∏ (—Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å–µ–≥–æ–¥–Ω—è)
    const today = new Date();
    today.setHours(0, 0, 0, 0);
    
    const deletedResponses = await prisma.feedbackResponse.deleteMany({
      where: {
        submittedAt: {
          gte: today
        },
        period: '2025-01'
      }
    });

    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ ${deletedResponses.count} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤`);
  } catch (error) {
    console.log(`‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: ${error.message}`);
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã KPI\n');
  
  try {
    await testKpiCalculation();
    testKpiWeights();
    
    // –°–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('\n‚ùì –û—á–∏—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ? (–∑–∞–ø—É—Å—Ç–∏—Ç–µ cleanupTestData() –æ—Ç–¥–µ–ª—å–Ω–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)');
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export {
  testKpiCalculation,
  testKpiWeights,
  cleanupTestData,
  main
};

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main().catch(console.error);
}
