import { PrismaClient } from '../generated/prisma';

const prisma = new PrismaClient();

async function testKpiSystemComplete() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã KPI —Å —Ñ–∏–¥–±–µ–∫–∞–º–∏...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–±–ª–æ–Ω–æ–≤ —Ñ–∏–¥–±–µ–∫–æ–≤
    const templatesCount = await prisma.feedbackTemplate.count();
    console.log(`üìù –®–∞–±–ª–æ–Ω–æ–≤ —Ñ–∏–¥–±–µ–∫–æ–≤: ${templatesCount}`);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã
    const activeTemplates = await prisma.feedbackTemplate.count({
      where: { isActive: true }
    });
    console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: ${activeTemplates}`);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    const teachersCount = await prisma.teacher.count();
    console.log(`üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teachersCount}`);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    const studentsCount = await prisma.student.count();
    console.log(`üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç–æ–≤: ${studentsCount}`);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–¥–±–µ–∫–æ–≤
    const feedbacksCount = await prisma.feedbackResponse.count();
    console.log(`üí¨ –§–∏–¥–±–µ–∫–æ–≤: ${feedbacksCount}`);

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤
    const completedFeedbacks = await prisma.feedbackResponse.count({
      where: { isCompleted: true }
    });
    console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤: ${completedFeedbacks}`);

    // 2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å KPI —à–∞–±–ª–æ–Ω—ã
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ KPI-—Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤...');
    const kpiTemplates = await prisma.feedbackTemplate.findMany({
      where: {
        isActive: true,
        hasKpiQuestions: true
      },
      select: {
        id: true,
        name: true,
        title: true,
        kpiMetrics: true
      }
    });

    for (const template of kpiTemplates) {
      console.log(`  üìã ${template.title} (${template.name})`);
      console.log(`     KPI –º–µ—Ç—Ä–∏–∫–∏: ${template.kpiMetrics.join(', ')}`);
    }

    // 3. –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–¥–±–µ–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('\nüéØ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∏–¥–±–µ–∫–∞...');
    
    const student = await prisma.student.findFirst({
      include: { user: true }
    });

    const teacher = await prisma.teacher.findFirst();

    const studentTemplate = await prisma.feedbackTemplate.findFirst({
      where: {
        name: 'student_retention_comprehensive',
        isActive: true
      }
    });

    if (student && teacher && studentTemplate) {
      // –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–¥–±–µ–∫
      const testFeedback = await prisma.feedbackResponse.create({
        data: {
          userId: student.userId,
          templateId: studentTemplate.id,
          answers: {
            satisfaction_overall: 4,
            continue_studying: true,
            recommend_school: 5,
            teacher_effectiveness: { [teacher.id]: 5 },
            mood_today: 85,
            concentration_level: 90,
            motivation_level: 80,
            socialization_level: 75
          },
          isCompleted: true,
          submittedAt: new Date(),
          period: '2025-01',
          aboutTeacherId: teacher.id
        }
      });

      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–¥–±–µ–∫ ID: ${testFeedback.id}`);

      // 4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      console.log('\nüòä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–∞ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è...');
      
      // –ù–∞–π—Ç–∏ –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
      let emotionalState = await prisma.emotionalState.findUnique({
        where: { studentId: student.id }
      });

      if (!emotionalState) {
        emotionalState = await prisma.emotionalState.create({
          data: {
            studentId: student.id,
            mood: 85,
            moodDesc: '–•–æ—Ä–æ—à–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ',
            moodTrend: 'neutral',
            concentration: 90,
            concentrationDesc: '–í—ã—Å–æ–∫–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è',
            concentrationTrend: 'up',
            socialization: 75,
            socializationDesc: '–•–æ—Ä–æ—à–∞—è —Å–æ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è',
            socializationTrend: 'neutral',
            motivation: 80,
            motivationDesc: '–•–æ—Ä–æ—à–∞—è –º–æ—Ç–∏–≤–∞—Ü–∏—è',
            motivationTrend: 'neutral'
          }
        });
      }

      console.log(`üìä –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ ${student.user.name}:`);
      console.log(`   –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: ${emotionalState.mood} (${emotionalState.moodDesc})`);
      console.log(`   –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è: ${emotionalState.concentration} (${emotionalState.concentrationDesc})`);
      console.log(`   –°–æ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${emotionalState.socialization} (${emotionalState.socializationDesc})`);
      console.log(`   –ú–æ—Ç–∏–≤–∞—Ü–∏—è: ${emotionalState.motivation} (${emotionalState.motivationDesc})`);

      // 5. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤
      console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤...');
      
      let userStatus = await prisma.userFeedbackStatus.findUnique({
        where: { userId: student.userId }
      });

      if (!userStatus) {
        userStatus = await prisma.userFeedbackStatus.create({
          data: {
            userId: student.userId,
            hasCompletedMandatory: true,
            lastCompletedAt: new Date(),
            currentPeriod: '2025-01',
            nextDueDate: new Date(2025, 1, 1) // –§–µ–≤—Ä–∞–ª—å 2025
          }
        });
      }

      console.log(`üìÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${student.user.name}:`);
      console.log(`   –ó–∞–≤–µ—Ä—à–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ: ${userStatus.hasCompletedMandatory ? '–î–∞' : '–ù–µ—Ç'}`);
      console.log(`   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ: ${userStatus.lastCompletedAt?.toDateString() || '–ù–∏–∫–æ–≥–¥–∞'}`);
      console.log(`   –¢–µ–∫—É—â–∏–π –ø–µ—Ä–∏–æ–¥: ${userStatus.currentPeriod || '–ù–µ –∑–∞–¥–∞–Ω'}`);

      // 6. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      console.log('\nüßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
      await prisma.feedbackResponse.delete({
        where: { id: testFeedback.id }
      });
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∏–¥–±–µ–∫ —É–¥–∞–ª–µ–Ω');

    } else {
      console.log('‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∏–¥–±–µ–∫–∞');
    }

    // 7. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìà –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ñ–∏–¥–±–µ–∫–æ–≤:');
    console.log(`üìù –í—Å–µ–≥–æ —à–∞–±–ª–æ–Ω–æ–≤: ${templatesCount}`);
    console.log(`‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤: ${activeTemplates}`);
    console.log(`üí¨ –í—Å–µ–≥–æ —Ñ–∏–¥–±–µ–∫–æ–≤: ${feedbacksCount}`);
    console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ñ–∏–¥–±–µ–∫–æ–≤: ${completedFeedbacks}`);
    console.log(`üë®‚Äçüè´ –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π: ${teachersCount}`);
    console.log(`üë®‚Äçüéì –°—Ç—É–¥–µ–Ω—Ç–æ–≤: ${studentsCount}`);

    if (feedbacksCount > 0) {
      const completionRate = (completedFeedbacks / feedbacksCount * 100).toFixed(1);
      console.log(`üìä –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${completionRate}%`);
    }

    console.log('\n‚úÖ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã KPI —Å —Ñ–∏–¥–±–µ–∫–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–µ—Å–∞ –º–µ—Ç—Ä–∏–∫
function demonstrateKpiWeights() {
  console.log('\n‚öñÔ∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–µ—Å–æ–≤—ã—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤ KPI...');

  const feedbackWeights = {
    studentSatisfaction: 0.30,     // 30% - –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    parentSatisfaction: 0.25,      // 25% - –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Ä–æ–¥–∏—Ç–µ–ª–µ–π  
    studentRetention: 0.20,        // 20% - –£–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
    emotionalWellbeing: 0.15,      // 15% - –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ
    teachingQuality: 0.10          // 10% - –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è
  };

  console.log('üìä –í–µ—Å–∞ —Ñ–∏–¥–±–µ–∫-–º–µ—Ç—Ä–∏–∫ –≤ –æ–±—â–µ–º KPI:');
  Object.entries(feedbackWeights).forEach(([metric, weight]) => {
    const percentage = (weight * 100).toFixed(0);
    console.log(`   ${metric}: ${percentage}%`);
  });

  // –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞
  const exampleScores = {
    studentSatisfaction: 85,
    parentSatisfaction: 78,
    studentRetention: 92,
    emotionalWellbeing: 76,
    teachingQuality: 88
  };

  const totalKpi = 
    (exampleScores.studentSatisfaction * feedbackWeights.studentSatisfaction) +
    (exampleScores.parentSatisfaction * feedbackWeights.parentSatisfaction) +
    (exampleScores.studentRetention * feedbackWeights.studentRetention) +
    (exampleScores.emotionalWellbeing * feedbackWeights.emotionalWellbeing) +
    (exampleScores.teachingQuality * feedbackWeights.teachingQuality);

  console.log('\nüéØ –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—á–µ—Ç–∞:');
  Object.entries(exampleScores).forEach(([metric, score]) => {
    const contribution = score * feedbackWeights[metric];
    console.log(`   ${metric}: ${score} √ó ${feedbackWeights[metric]} = ${contribution.toFixed(1)}`);
  });
  console.log(`\nüèÜ –ò—Ç–æ–≥–æ–≤—ã–π KPI: ${totalKpi.toFixed(1)}`);
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ —Å–∏—Å—Ç–µ–º—ã KPI —Å —Ñ–∏–¥–±–µ–∫–∞–º–∏\n');
  
  try {
    await testKpiSystemComplete();
    demonstrateKpiWeights();
    
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
  } finally {
    console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
  }
}

// –ó–∞–ø—É—Å–∫ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main().catch(console.error);
}

export { testKpiSystemComplete, demonstrateKpiWeights, main };
